// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`SchemaPatcher should match snapshot for schema.json 1`] = `
Map {
  "/environments" => {
    "compiledDiff": [Function],
    "hashFields": [
      "name",
      "region",
      "id",
    ],
    "itemSchema": {
      "additionalProperties": false,
      "properties": {
        "envVariables": {
          "$ref": "#/properties/envVariables",
        },
        "id": {
          "maxLength": 191,
          "minLength": 1,
          "type": "string",
        },
        "name": {
          "maxLength": 191,
          "minLength": 1,
          "type": "string",
        },
        "region": {
          "minLength": 1,
          "type": "string",
        },
        "services": {
          "items": {
            "anyOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "autoscaling": {
                    "additionalProperties": false,
                    "properties": {
                      "cooldownTimerSecs": {
                        "type": "number",
                      },
                      "cpuThreshold": {
                        "type": "number",
                      },
                      "memoryThreshold": {
                        "type": "number",
                      },
                      "requestsPerTarget": {
                        "type": "number",
                      },
                    },
                    "type": "object",
                  },
                  "basePath": {
                    "default": ".",
                    "minLength": 1,
                    "type": "string",
                  },
                  "buildCommand": {
                    "type": "string",
                  },
                  "buildType": {
                    "enum": [
                      "nodejs",
                      "nixpacks",
                      "docker",
                      "fromService",
                      "fromRepository",
                    ],
                    "type": "string",
                  },
                  "ci": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "const": "codebuild",
                            "type": "string",
                          },
                        },
                        "required": [
                          "type",
                        ],
                        "type": "object",
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "instanceSize": {
                            "type": "string",
                          },
                          "instanceStorage": {
                            "default": 30,
                            "type": "number",
                          },
                          "storageIops": {
                            "default": 3000,
                            "type": "number",
                          },
                          "storageThroughput": {
                            "default": 125,
                            "type": "number",
                          },
                          "storageType": {
                            "default": "gp3",
                            "enum": [
                              "gp3",
                              "gp2",
                              "io1",
                              "io2",
                            ],
                            "type": "string",
                          },
                          "type": {
                            "const": "ec2",
                            "type": "string",
                          },
                        },
                        "required": [
                          "type",
                        ],
                        "type": "object",
                      },
                    ],
                    "default": {
                      "type": "codebuild",
                    },
                  },
                  "cloudfrontAutoCacheInvalidation": {
                    "default": true,
                    "type": "boolean",
                  },
                  "containerImage": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "registryId": {
                            "minLength": 1,
                            "type": "string",
                          },
                          "repository": {
                            "minLength": 1,
                            "type": "string",
                          },
                          "tag": {
                            "default": "latest",
                            "minLength": 1,
                            "type": "string",
                          },
                        },
                        "required": [
                          "registryId",
                          "repository",
                        ],
                        "type": "object",
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "fromService": {
                            "minLength": 1,
                            "type": "string",
                          },
                        },
                        "required": [
                          "fromService",
                        ],
                        "type": "object",
                      },
                    ],
                  },
                  "containerInsights": {
                    "default": false,
                    "type": "boolean",
                  },
                  "cpu": {
                    "minimum": 0.125,
                    "type": "number",
                  },
                  "dependsOn": {
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "dockerContext": {
                    "type": "string",
                  },
                  "dockerLabels": {
                    "additionalProperties": {
                      "type": "string",
                    },
                    "type": "object",
                  },
                  "dockerfilePath": {
                    "type": "string",
                  },
                  "enableCloudfrontSwr": {
                    "default": false,
                    "type": "boolean",
                  },
                  "envVariables": {
                    "$ref": "#/properties/envVariables",
                  },
                  "experimental": {
                    "additionalProperties": false,
                    "properties": {
                      "datadog": {
                        "additionalProperties": false,
                        "properties": {
                          "datadogApiKey": {
                            "type": "string",
                          },
                          "datadogSite": {
                            "type": "string",
                          },
                          "enabled": {
                            "type": "boolean",
                          },
                          "envVariables": {
                            "$ref": "#/properties/envVariables",
                          },
                          "logging": {
                            "default": false,
                            "type": "boolean",
                          },
                        },
                        "required": [
                          "enabled",
                          "datadogSite",
                          "datadogApiKey",
                        ],
                        "type": "object",
                      },
                      "healthCheckInterval": {
                        "maximum": 300,
                        "minimum": 5,
                        "type": "number",
                      },
                      "healthCheckTimeout": {
                        "maximum": 120,
                        "minimum": 2,
                        "type": "number",
                      },
                      "runAsNonRootUser": {
                        "default": false,
                        "type": "boolean",
                      },
                    },
                    "type": "object",
                  },
                  "gpu": {
                    "maximum": 16,
                    "minimum": 0,
                    "type": "number",
                  },
                  "healthCheckGracePeriodSecs": {
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "number",
                  },
                  "healthCheckIntervalSecs": {
                    "default": 30,
                    "maximum": 300,
                    "minimum": 5,
                    "type": "number",
                  },
                  "healthCheckPath": {
                    "default": "/",
                    "pattern": "^\\/[!-~]*$",
                    "type": "string",
                  },
                  "healthCheckTimeoutSecs": {
                    "default": 5,
                    "maximum": 120,
                    "minimum": 2,
                    "type": "number",
                  },
                  "id": {
                    "maxLength": 191,
                    "minLength": 1,
                    "type": "string",
                  },
                  "includeEnvVariablesInBuild": {
                    "default": true,
                    "type": "boolean",
                  },
                  "injectEnvVariablesInDockerfile": {
                    "default": true,
                    "type": "boolean",
                  },
                  "installCommand": {
                    "type": "string",
                  },
                  "integrations": {
                    "additionalProperties": false,
                    "properties": {
                      "uploadSentrySourceMap": {
                        "default": false,
                        "type": "boolean",
                      },
                    },
                    "type": "object",
                  },
                  "logging": {
                    "additionalProperties": false,
                    "properties": {
                      "cloudwatchLogsEnabled": {
                        "default": true,
                        "type": "boolean",
                      },
                      "cloudwatchLogsRetentionDays": {
                        "maximum": 3653,
                        "minimum": 1,
                        "type": "number",
                      },
                      "ecsLogsMetadataEnabled": {
                        "default": false,
                        "type": "boolean",
                      },
                      "envVariables": {
                        "$ref": "#/properties/envVariables",
                      },
                      "firelens": {
                        "anyOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "config": {
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "match": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                    "options": {
                                      "additionalProperties": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                          },
                                          {
                                            "type": "number",
                                          },
                                          {
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                        ],
                                      },
                                      "type": "object",
                                    },
                                  },
                                  "required": [
                                    "name",
                                    "match",
                                    "options",
                                  ],
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "configSource": {
                                "const": "inline",
                                "type": "string",
                              },
                            },
                            "required": [
                              "configSource",
                              "config",
                            ],
                            "type": "object",
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "configFilePath": {
                                "type": "string",
                              },
                              "configSource": {
                                "const": "file",
                                "type": "string",
                              },
                            },
                            "required": [
                              "configSource",
                              "configFilePath",
                            ],
                            "type": "object",
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                  "maxInstances": {
                    "default": 1,
                    "minimum": 1,
                    "type": "number",
                  },
                  "memory": {
                    "minimum": 0.125,
                    "type": "number",
                  },
                  "minInstances": {
                    "default": 1,
                    "minimum": 1,
                    "type": "number",
                  },
                  "name": {
                    "maxLength": 191,
                    "minLength": 1,
                    "type": "string",
                  },
                  "originShieldEnabled": {
                    "default": true,
                    "type": "boolean",
                  },
                  "permissions": {
                    "additionalProperties": false,
                    "properties": {
                      "attach": {
                        "items": {
                          "pattern": "^arn",
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "inline": {
                        "anyOf": [
                          {
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": [
                                    "string",
                                    "number",
                                    "boolean",
                                    "null",
                                  ],
                                },
                                {
                                  "items": {
                                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline/anyOf/0/additionalProperties",
                                  },
                                  "type": "array",
                                },
                                {
                                  "additionalProperties": {
                                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline/anyOf/0/additionalProperties",
                                  },
                                  "type": "object",
                                },
                              ],
                            },
                            "type": "object",
                          },
                          {
                            "type": "string",
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                  "port": {
                    "default": 3000,
                    "type": [
                      "number",
                      "string",
                    ],
                  },
                  "postBuildCommand": {
                    "type": "string",
                  },
                  "postDeployCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                  },
                  "preDeployCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                  },
                  "privileged": {
                    "default": false,
                    "type": "boolean",
                  },
                  "sidecars": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "cpuAllotment": {
                          "minimum": 0,
                          "type": "number",
                        },
                        "dockerLabels": {
                          "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                        },
                        "enableNetworking": {
                          "default": true,
                          "type": "boolean",
                        },
                        "envVariables": {
                          "$ref": "#/properties/envVariables",
                        },
                        "essential": {
                          "default": false,
                          "type": "boolean",
                        },
                        "image": {
                          "type": "string",
                        },
                        "logging": {
                          "default": false,
                          "type": "boolean",
                        },
                        "memoryAllotment": {
                          "minimum": 0,
                          "type": "number",
                        },
                        "name": {
                          "type": "string",
                        },
                        "ports": {
                          "items": {
                            "type": "number",
                          },
                          "type": "array",
                        },
                        "startCommand": {
                          "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                        },
                      },
                      "required": [
                        "cpuAllotment",
                        "memoryAllotment",
                        "name",
                        "image",
                      ],
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "startCommand": {
                    "anyOf": [
                      {
                        "type": "string",
                      },
                      {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                    ],
                  },
                  "stickySessionsDurationSecs": {
                    "default": 86400,
                    "type": "number",
                  },
                  "stickySessionsEnabled": {
                    "default": false,
                    "type": "boolean",
                  },
                  "storage": {
                    "maximum": 200,
                    "minimum": 20,
                    "type": "integer",
                  },
                  "target": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "const": "fargate",
                            "type": "string",
                          },
                        },
                        "required": [
                          "type",
                        ],
                        "type": "object",
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "clusterInstanceSize": {
                            "type": "string",
                          },
                          "clusterMaxInstances": {
                            "type": "number",
                          },
                          "clusterMinInstances": {
                            "minimum": 1,
                            "type": "number",
                          },
                          "type": {
                            "const": "ecs-ec2",
                            "type": "string",
                          },
                        },
                        "required": [
                          "type",
                          "clusterInstanceSize",
                          "clusterMinInstances",
                          "clusterMaxInstances",
                        ],
                        "type": "object",
                      },
                    ],
                    "default": {
                      "type": "fargate",
                    },
                  },
                  "type": {
                    "const": "web",
                    "type": "string",
                  },
                  "versionHistoryCount": {
                    "default": 10,
                    "minimum": 1,
                    "type": "number",
                  },
                  "watchPaths": {
                    "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                  },
                },
                "required": [
                  "id",
                  "name",
                  "cpu",
                  "memory",
                  "type",
                ],
                "type": "object",
              },
              {
                "additionalProperties": false,
                "properties": {
                  "autoscaling": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling",
                  },
                  "basePath": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                  },
                  "buildCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildCommand",
                  },
                  "buildType": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType",
                  },
                  "ci": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                  },
                  "cloudfrontAutoCacheInvalidation": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cloudfrontAutoCacheInvalidation",
                  },
                  "containerImage": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage",
                  },
                  "containerInsights": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerInsights",
                  },
                  "cpu": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                  },
                  "dependsOn": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                  },
                  "dockerContext": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerContext",
                  },
                  "dockerLabels": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                  },
                  "dockerfilePath": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerfilePath",
                  },
                  "envVariables": {
                    "$ref": "#/properties/envVariables",
                  },
                  "experimental": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/experimental",
                  },
                  "gpu": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                  },
                  "healthCheckGracePeriodSecs": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckGracePeriodSecs",
                  },
                  "healthCheckIntervalSecs": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckIntervalSecs",
                  },
                  "healthCheckPath": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckPath",
                  },
                  "healthCheckTimeoutSecs": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckTimeoutSecs",
                  },
                  "id": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                  },
                  "includeEnvVariablesInBuild": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/includeEnvVariablesInBuild",
                  },
                  "injectEnvVariablesInDockerfile": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/injectEnvVariablesInDockerfile",
                  },
                  "installCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/installCommand",
                  },
                  "integrations": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                  },
                  "logging": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                  },
                  "maxInstances": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/maxInstances",
                  },
                  "memory": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                  },
                  "minInstances": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/minInstances",
                  },
                  "name": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                  },
                  "originShieldEnabled": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/originShieldEnabled",
                  },
                  "permissions": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions",
                  },
                  "port": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/port",
                  },
                  "postBuildCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postBuildCommand",
                  },
                  "postDeployCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postDeployCommand",
                  },
                  "preDeployCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/preDeployCommand",
                  },
                  "privileged": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/privileged",
                  },
                  "sidecars": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                  },
                  "startCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                  },
                  "stickySessionsDurationSecs": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/stickySessionsDurationSecs",
                  },
                  "stickySessionsEnabled": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/stickySessionsEnabled",
                  },
                  "storage": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                  },
                  "target": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target",
                  },
                  "type": {
                    "const": "web-private",
                    "type": "string",
                  },
                  "versionHistoryCount": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                  },
                  "watchPaths": {
                    "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                  },
                },
                "required": [
                  "id",
                  "name",
                  "cpu",
                  "memory",
                  "type",
                ],
                "type": "object",
              },
              {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "applyChangesImmediately": {
                        "default": false,
                        "type": "boolean",
                      },
                      "autoUpgradeMinorVersions": {
                        "default": true,
                        "type": "boolean",
                      },
                      "backupRetentionPeriodInDays": {
                        "default": 35,
                        "maximum": 35,
                        "minimum": 0,
                        "type": "number",
                      },
                      "connectionStringEnvVarName": {
                        "pattern": "^\\w+$",
                        "type": "string",
                      },
                      "deleteBackupsWithRdsDeletion": {
                        "default": true,
                        "type": "boolean",
                      },
                      "deletionProtection": {
                        "default": false,
                        "type": "boolean",
                      },
                      "dependsOn": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                      },
                      "encryptionAtRest": {
                        "default": false,
                        "type": "boolean",
                      },
                      "engine": {
                        "const": "mysql",
                        "type": "string",
                      },
                      "engineVersion": {
                        "enum": [
                          "5.6",
                          "5.7",
                          "8.0",
                          "8",
                        ],
                        "type": "string",
                      },
                      "id": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                      },
                      "instanceSize": {
                        "type": "string",
                      },
                      "maxStorage": {
                        "default": 100,
                        "maximum": 65536,
                        "type": "integer",
                      },
                      "multiAvailabilityZones": {
                        "default": false,
                        "type": "boolean",
                      },
                      "name": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                      },
                      "performanceInsights": {
                        "default": false,
                        "type": "boolean",
                      },
                      "port": {
                        "type": "number",
                      },
                      "private": {
                        "default": false,
                        "type": "boolean",
                      },
                      "storage": {
                        "maximum": 65536,
                        "minimum": 20,
                        "type": "integer",
                      },
                      "storageProvisionedIops": {
                        "minimum": 1000,
                        "type": "number",
                      },
                      "storageType": {
                        "default": "gp2",
                        "enum": [
                          "gp3",
                          "gp2",
                          "io1",
                          "io2",
                        ],
                        "type": "string",
                      },
                      "type": {
                        "const": "rds",
                        "type": "string",
                      },
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "instanceSize",
                      "storage",
                      "engine",
                      "engineVersion",
                    ],
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "applyChangesImmediately": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/applyChangesImmediately",
                      },
                      "autoUpgradeMinorVersions": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/autoUpgradeMinorVersions",
                      },
                      "backupRetentionPeriodInDays": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/backupRetentionPeriodInDays",
                      },
                      "connectionStringEnvVarName": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/connectionStringEnvVarName",
                      },
                      "deleteBackupsWithRdsDeletion": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deleteBackupsWithRdsDeletion",
                      },
                      "deletionProtection": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deletionProtection",
                      },
                      "dependsOn": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                      },
                      "encryptionAtRest": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/encryptionAtRest",
                      },
                      "engine": {
                        "const": "postgres",
                        "type": "string",
                      },
                      "engineVersion": {
                        "enum": [
                          "9",
                          "10",
                          "11",
                          "12",
                          "13",
                          "14",
                          "15",
                          "16",
                          "17",
                        ],
                        "type": "string",
                      },
                      "id": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                      },
                      "instanceSize": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/instanceSize",
                      },
                      "maxStorage": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/maxStorage",
                      },
                      "multiAvailabilityZones": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/multiAvailabilityZones",
                      },
                      "name": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                      },
                      "performanceInsights": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/performanceInsights",
                      },
                      "port": {
                        "type": "number",
                      },
                      "private": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/private",
                      },
                      "storage": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storage",
                      },
                      "storageProvisionedIops": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageProvisionedIops",
                      },
                      "storageType": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageType",
                      },
                      "type": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/type",
                      },
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "instanceSize",
                      "storage",
                      "engine",
                      "engineVersion",
                    ],
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "applyChangesImmediately": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/applyChangesImmediately",
                      },
                      "autoUpgradeMinorVersions": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/autoUpgradeMinorVersions",
                      },
                      "backupRetentionPeriodInDays": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/backupRetentionPeriodInDays",
                      },
                      "connectionStringEnvVarName": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/connectionStringEnvVarName",
                      },
                      "deleteBackupsWithRdsDeletion": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deleteBackupsWithRdsDeletion",
                      },
                      "deletionProtection": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deletionProtection",
                      },
                      "dependsOn": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                      },
                      "encryptionAtRest": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/encryptionAtRest",
                      },
                      "engine": {
                        "const": "mariadb",
                        "type": "string",
                      },
                      "engineVersion": {
                        "enum": [
                          "10.2",
                          "10.3",
                          "10.4",
                          "10.5",
                          "10.6",
                        ],
                        "type": "string",
                      },
                      "id": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                      },
                      "instanceSize": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/instanceSize",
                      },
                      "maxStorage": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/maxStorage",
                      },
                      "multiAvailabilityZones": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/multiAvailabilityZones",
                      },
                      "name": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                      },
                      "performanceInsights": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/performanceInsights",
                      },
                      "port": {
                        "type": "number",
                      },
                      "private": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/private",
                      },
                      "storage": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storage",
                      },
                      "storageProvisionedIops": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageProvisionedIops",
                      },
                      "storageType": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageType",
                      },
                      "type": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/type",
                      },
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "instanceSize",
                      "storage",
                      "engine",
                      "engineVersion",
                    ],
                    "type": "object",
                  },
                ],
              },
              {
                "additionalProperties": false,
                "properties": {
                  "basePath": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                  },
                  "buildCommand": {
                    "type": "string",
                  },
                  "buildType": {
                    "enum": [
                      "nodejs",
                      "nixpacks",
                      "docker",
                    ],
                    "type": "string",
                  },
                  "ci": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                  },
                  "cloudfrontAutoCacheInvalidation": {
                    "default": true,
                    "type": "boolean",
                  },
                  "dependsOn": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                  },
                  "dockerContext": {
                    "type": "string",
                  },
                  "dockerfilePath": {
                    "type": "string",
                  },
                  "envVariables": {
                    "$ref": "#/properties/envVariables",
                  },
                  "id": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                  },
                  "installCommand": {
                    "type": "string",
                  },
                  "integrations": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                  },
                  "name": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                  },
                  "originShieldEnabled": {
                    "default": true,
                    "type": "boolean",
                  },
                  "outputDirectory": {
                    "default": "public",
                    "type": "string",
                  },
                  "postBuildCommand": {
                    "type": "string",
                  },
                  "singlePageApp": {
                    "default": false,
                    "type": "boolean",
                  },
                  "type": {
                    "const": "static",
                    "type": "string",
                  },
                  "versionHistoryCount": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                  },
                  "watchPaths": {
                    "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                  },
                },
                "required": [
                  "id",
                  "name",
                  "type",
                ],
                "type": "object",
              },
              {
                "additionalProperties": false,
                "properties": {
                  "autoscaling": {
                    "additionalProperties": false,
                    "properties": {
                      "cooldownTimerSecs": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cooldownTimerSecs",
                      },
                      "cpuThreshold": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cpuThreshold",
                      },
                      "memoryThreshold": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/memoryThreshold",
                      },
                    },
                    "type": "object",
                  },
                  "basePath": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                  },
                  "buildCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildCommand",
                  },
                  "buildType": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType",
                  },
                  "ci": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                  },
                  "cloudfrontAutoCacheInvalidation": {
                    "default": true,
                    "type": "boolean",
                  },
                  "containerImage": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage",
                  },
                  "containerInsights": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerInsights",
                  },
                  "cpu": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                  },
                  "dependsOn": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                  },
                  "dockerContext": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerContext",
                  },
                  "dockerLabels": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                  },
                  "dockerfilePath": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerfilePath",
                  },
                  "envVariables": {
                    "$ref": "#/properties/envVariables",
                  },
                  "experimental": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/experimental",
                  },
                  "gpu": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                  },
                  "id": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                  },
                  "includeEnvVariablesInBuild": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/includeEnvVariablesInBuild",
                  },
                  "injectEnvVariablesInDockerfile": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/injectEnvVariablesInDockerfile",
                  },
                  "installCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/installCommand",
                  },
                  "integrations": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                  },
                  "logging": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                  },
                  "maxInstances": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/maxInstances",
                  },
                  "memory": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                  },
                  "minInstances": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/minInstances",
                  },
                  "name": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                  },
                  "permissions": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions",
                  },
                  "postBuildCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postBuildCommand",
                  },
                  "postDeployCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postDeployCommand",
                  },
                  "preDeployCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/preDeployCommand",
                  },
                  "privileged": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/privileged",
                  },
                  "sidecars": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                  },
                  "startCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                  },
                  "storage": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                  },
                  "target": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target",
                  },
                  "type": {
                    "const": "worker",
                    "type": "string",
                  },
                  "versionHistoryCount": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                  },
                  "watchPaths": {
                    "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                  },
                },
                "required": [
                  "id",
                  "name",
                  "cpu",
                  "memory",
                  "type",
                ],
                "type": "object",
              },
              {
                "additionalProperties": false,
                "properties": {
                  "applyChangesImmediately": {
                    "default": false,
                    "description": "Not applicable at the moment. If there are changes that can be applied, and this is set to TRUE, they will be applied immediately (with downtime) instead of during next maintenance window. Applicable when changes are made.",
                    "type": "boolean",
                  },
                  "autoMinorVersionUpgrade": {
                    "default": true,
                    "type": "boolean",
                  },
                  "clusterMode": {
                    "const": false,
                    "default": false,
                    "description": "Defaults to false as it is not supported yet",
                    "type": "boolean",
                  },
                  "connectionStringEnvVarName": {
                    "description": "The name of the environment variable that will contain the connecting string URL and that will be available to all other services in the same environment.",
                    "pattern": "^\\w+$",
                    "type": "string",
                  },
                  "dependsOn": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                  },
                  "encryptionAtRest": {
                    "default": true,
                    "type": "boolean",
                  },
                  "engine": {
                    "const": "redis",
                    "description": "The cache engine to be created in AWS Elasticache",
                    "type": "string",
                  },
                  "engineVersion": {
                    "enum": [
                      "7.1",
                      "7.0",
                      "6.2",
                      "6.0",
                      "5.0.6",
                      "5.0.5",
                      "5.0.4",
                      "5.0.3",
                      "5.0.0",
                      "4.0.10",
                      "3.2.10",
                      "3.2.6",
                      "3.2.4",
                      "2.8.24",
                      "2.8.23",
                      "2.8.22",
                      "2.8.21",
                      "2.8.19",
                      "2.8.6",
                      "2.6.13",
                    ],
                    "type": "string",
                  },
                  "evictionPolicy": {
                    "default": "volatile-lru",
                    "enum": [
                      "volatile-lru",
                      "allkeys-lru",
                      "volatile-lfu",
                      "allkeys-lfu",
                      "volatile-random",
                      "allkeys-random",
                      "volatile-ttl",
                      "noeviction",
                    ],
                    "type": "string",
                  },
                  "id": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                  },
                  "instanceSize": {
                    "description": "The AWS instance size",
                    "enum": [
                      "cache.t4g.micro",
                      "cache.t3.micro",
                      "cache.t4g.small",
                      "cache.t3.small",
                      "cache.t4g.medium",
                      "cache.t3.medium",
                      "cache.m7g.large",
                      "cache.m6g.large",
                      "cache.r7g.large",
                      "cache.r6g.large",
                      "cache.r5.large",
                      "cache.c7gn.large",
                      "cache.m7g.xlarge",
                      "cache.m6g.xlarge",
                      "cache.m5.xlarge",
                      "cache.r7g.xlarge",
                      "cache.r6g.xlarge",
                      "cache.r5.xlarge",
                      "cache.c7gn.xlarge",
                      "cache.m7g.2xlarge",
                      "cache.m6g.2xlarge",
                      "cache.m5.2xlarge",
                      "cache.r7g.2xlarge",
                      "cache.r6gd.xlarge",
                      "cache.r6g.2xlarge",
                      "cache.r5.2xlarge",
                      "cache.c7gn.2xlarge",
                      "cache.m7g.4xlarge",
                      "cache.m6g.4xlarge",
                      "cache.m5.4xlarge",
                      "cache.r6gd.2xlarge",
                      "cache.r7g.4xlarge",
                      "cache.r6g.4xlarge",
                      "cache.r6gd.4xlarge",
                      "cache.r5.4xlarge",
                      "cache.c7gn.4xlarge",
                      "cache.m7g.8xlarge",
                      "cache.m6g.8xlarge",
                      "cache.r6gd.8xlarge",
                      "cache.r7g.8xlarge",
                      "cache.r6g.8xlarge",
                      "cache.c7gn.8xlarge",
                      "cache.m7g.12xlarge",
                      "cache.m6g.12xlarge",
                      "cache.m5.12xlarge",
                      "cache.r7g.12xlarge",
                      "cache.m6g.16xlarge",
                      "cache.r6g.12xlarge",
                      "cache.r5.12xlarge",
                      "cache.c7gn.12xlarge",
                      "cache.r6g.16xlarge",
                      "cache.m5.24xlarge",
                      "cache.r6gd.12xlarge",
                      "cache.r5.24xlarge",
                      "cache.r7g.16xlarge",
                      "cache.r6gd.16xlarge",
                      "cache.m7g.16xlarge",
                      "cache.c7gn.16xlarge",
                      "cache.m3.2xlarge",
                      "cache.m4.xlarge",
                      "cache.r4.xlarge",
                      "cache.r3.large",
                      "cache.m4.2xlarge",
                      "cache.r3.xlarge",
                      "cache.m4.large",
                      "cache.r4.8xlarge",
                      "cache.r4.16xlarge",
                      "cache.r4.4xlarge",
                      "cache.m4.4xlarge",
                      "cache.m1.medium",
                      "cache.m1.xlarge",
                      "cache.t1.micro",
                      "cache.m2.2xlarge",
                      "cache.m4.10xlarge",
                      "cache.t2.medium",
                      "cache.m3.large",
                      "cache.t2.small",
                      "cache.t2.micro",
                      "cache.m2.xlarge",
                      "cache.r3.8xlarge",
                      "cache.m3.medium",
                      "cache.r4.2xlarge",
                      "cache.m2.4xlarge",
                      "cache.r3.4xlarge",
                      "cache.m3.xlarge",
                      "cache.m1.large",
                      "cache.r3.2xlarge",
                      "cache.r4.large",
                      "cache.c1.xlarge",
                      "cache.m1.small",
                    ],
                    "type": "string",
                  },
                  "name": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                  },
                  "numberOfReplicas": {
                    "default": 1,
                    "description": "The number of replicas you want in your Redis service",
                    "type": "number",
                  },
                  "port": {
                    "default": 6379,
                    "type": "number",
                  },
                  "type": {
                    "const": "elasticache",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                  "name",
                  "type",
                  "engine",
                  "instanceSize",
                  "engineVersion",
                ],
                "type": "object",
              },
              {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "basePath": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                      },
                      "buildCommand": {
                        "type": "string",
                      },
                      "buildType": {
                        "const": "nixpacks",
                        "type": "string",
                      },
                      "ci": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                      },
                      "containerInsights": {
                        "default": false,
                        "type": "boolean",
                      },
                      "cpu": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                      },
                      "cpuArchitecture": {
                        "anyOf": [
                          {
                            "enum": [
                              "x86_64",
                              "x86-64",
                              "arm64",
                              "amd64",
                            ],
                            "type": "string",
                          },
                          {
                            "items": {
                              "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture/anyOf/0",
                            },
                            "type": "array",
                          },
                        ],
                        "default": "x86_64",
                      },
                      "dependsOn": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                      },
                      "dockerLabels": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                      },
                      "envVariables": {
                        "$ref": "#/properties/envVariables",
                      },
                      "experimental": {
                        "additionalProperties": false,
                        "properties": {
                          "runAsNonRootUser": {
                            "default": false,
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "gpu": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                      },
                      "id": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                      },
                      "includeEnvVariablesInBuild": {
                        "default": true,
                        "type": "boolean",
                      },
                      "injectEnvVariablesInDockerfile": {
                        "default": true,
                        "type": "boolean",
                      },
                      "installCommand": {
                        "type": "string",
                      },
                      "integrations": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                      },
                      "jobs": {
                        "additionalProperties": {
                          "additionalProperties": false,
                          "properties": {
                            "cpu": {
                              "anyOf": [
                                {
                                  "anyOf": [
                                    {
                                      "not": {},
                                    },
                                    {
                                      "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                                    },
                                  ],
                                },
                                {
                                  "type": "null",
                                },
                              ],
                            },
                            "gpu": {
                              "anyOf": [
                                {
                                  "anyOf": [
                                    {
                                      "not": {},
                                    },
                                    {
                                      "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                                    },
                                  ],
                                },
                                {
                                  "type": "null",
                                },
                              ],
                            },
                            "memory": {
                              "anyOf": [
                                {
                                  "anyOf": [
                                    {
                                      "not": {},
                                    },
                                    {
                                      "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                                    },
                                  ],
                                },
                                {
                                  "type": "null",
                                },
                              ],
                            },
                            "schedule": {
                              "type": "string",
                            },
                            "startCommand": {
                              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                            },
                            "timeout": {
                              "default": 480,
                              "description": "Timeout in minutes",
                              "maximum": 1440,
                              "minimum": 1,
                              "type": "number",
                            },
                            "timezone": {
                              "type": "string",
                            },
                          },
                          "required": [
                            "startCommand",
                            "schedule",
                          ],
                          "type": "object",
                        },
                        "type": "object",
                      },
                      "logging": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                      },
                      "memory": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                      },
                      "name": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                      },
                      "permissions": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions",
                      },
                      "postBuildCommand": {
                        "type": "string",
                      },
                      "postDeployCommand": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                      },
                      "preDeployCommand": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                      },
                      "sidecars": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                      },
                      "storage": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                      },
                      "target": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target",
                        "default": {
                          "type": "fargate",
                        },
                      },
                      "type": {
                        "const": "scheduler",
                        "type": "string",
                      },
                      "versionHistoryCount": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                      },
                      "watchPaths": {
                        "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                      },
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "cpu",
                      "memory",
                      "jobs",
                      "buildType",
                    ],
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "basePath": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                      },
                      "buildType": {
                        "const": "fromService",
                        "type": "string",
                      },
                      "ci": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                      },
                      "containerImage": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage/anyOf/1",
                      },
                      "containerInsights": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/containerInsights",
                      },
                      "cpu": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                      },
                      "cpuArchitecture": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture",
                      },
                      "dependsOn": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                      },
                      "dockerLabels": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                      },
                      "envVariables": {
                        "$ref": "#/properties/envVariables",
                      },
                      "experimental": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/experimental",
                      },
                      "gpu": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                      },
                      "id": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                      },
                      "includeEnvVariablesInBuild": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/includeEnvVariablesInBuild",
                      },
                      "injectEnvVariablesInDockerfile": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/injectEnvVariablesInDockerfile",
                      },
                      "integrations": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                      },
                      "jobs": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/jobs",
                      },
                      "logging": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                      },
                      "memory": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                      },
                      "name": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                      },
                      "permissions": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/permissions",
                      },
                      "postDeployCommand": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/postDeployCommand",
                      },
                      "preDeployCommand": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/preDeployCommand",
                      },
                      "sidecars": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                      },
                      "storage": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                      },
                      "target": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/target",
                      },
                      "type": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/type",
                      },
                      "versionHistoryCount": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                      },
                      "watchPaths": {
                        "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                      },
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "cpu",
                      "memory",
                      "jobs",
                      "buildType",
                      "containerImage",
                    ],
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "basePath": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                      },
                      "buildType": {
                        "const": "docker",
                        "type": "string",
                      },
                      "ci": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                      },
                      "containerInsights": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/containerInsights",
                      },
                      "cpu": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                      },
                      "cpuArchitecture": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture",
                      },
                      "dependsOn": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                      },
                      "dockerContext": {
                        "type": "string",
                      },
                      "dockerLabels": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                      },
                      "dockerfilePath": {
                        "type": "string",
                      },
                      "envVariables": {
                        "$ref": "#/properties/envVariables",
                      },
                      "experimental": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/experimental",
                      },
                      "gpu": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                      },
                      "id": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                      },
                      "includeEnvVariablesInBuild": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/includeEnvVariablesInBuild",
                      },
                      "injectEnvVariablesInDockerfile": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/injectEnvVariablesInDockerfile",
                      },
                      "integrations": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                      },
                      "jobs": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/jobs",
                      },
                      "logging": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                      },
                      "memory": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                      },
                      "name": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                      },
                      "permissions": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/permissions",
                      },
                      "postDeployCommand": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/postDeployCommand",
                      },
                      "preDeployCommand": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/preDeployCommand",
                      },
                      "sidecars": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                      },
                      "storage": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                      },
                      "target": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/target",
                      },
                      "type": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/type",
                      },
                      "versionHistoryCount": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                      },
                      "watchPaths": {
                        "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                      },
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "cpu",
                      "memory",
                      "jobs",
                      "buildType",
                    ],
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "basePath": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                      },
                      "buildType": {
                        "const": "fromRepository",
                        "type": "string",
                      },
                      "ci": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                      },
                      "containerImage": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage/anyOf/0",
                      },
                      "containerInsights": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/containerInsights",
                      },
                      "cpu": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                      },
                      "cpuArchitecture": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture",
                      },
                      "dependsOn": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                      },
                      "dockerLabels": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                      },
                      "envVariables": {
                        "$ref": "#/properties/envVariables",
                      },
                      "experimental": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/experimental",
                      },
                      "gpu": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                      },
                      "id": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                      },
                      "includeEnvVariablesInBuild": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/includeEnvVariablesInBuild",
                      },
                      "injectEnvVariablesInDockerfile": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/injectEnvVariablesInDockerfile",
                      },
                      "integrations": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                      },
                      "jobs": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/jobs",
                      },
                      "logging": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                      },
                      "memory": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                      },
                      "name": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                      },
                      "permissions": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/permissions",
                      },
                      "postDeployCommand": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/postDeployCommand",
                      },
                      "preDeployCommand": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/preDeployCommand",
                      },
                      "sidecars": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                      },
                      "storage": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                      },
                      "target": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/target",
                      },
                      "type": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/type",
                      },
                      "versionHistoryCount": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                      },
                      "watchPaths": {
                        "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                      },
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "cpu",
                      "memory",
                      "jobs",
                      "buildType",
                      "containerImage",
                    ],
                    "type": "object",
                  },
                ],
              },
              {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "basePath": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                      },
                      "buildType": {
                        "const": "docker",
                        "type": "string",
                      },
                      "ci": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                      },
                      "dependsOn": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                      },
                      "dockerContext": {
                        "default": ".",
                        "type": "string",
                      },
                      "dockerLabels": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                      },
                      "dockerfilePath": {
                        "default": "./Dockerfile",
                        "type": "string",
                      },
                      "envVariables": {
                        "$ref": "#/properties/envVariables",
                      },
                      "id": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                      },
                      "includeEnvVariablesInBuild": {
                        "default": true,
                        "type": "boolean",
                      },
                      "injectEnvVariablesInDockerfile": {
                        "default": true,
                        "type": "boolean",
                      },
                      "lambda": {
                        "anyOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "cpuArchitecture": {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture",
                              },
                              "fnUrl": {
                                "anyOf": [
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "authType": {
                                        "default": "None",
                                        "enum": [
                                          "None",
                                        ],
                                        "type": "string",
                                      },
                                      "cors": {
                                        "additionalProperties": false,
                                        "properties": {
                                          "allowCredentials": {
                                            "default": false,
                                            "type": "boolean",
                                          },
                                          "allowHeaders": {
                                            "default": [],
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          "allowMethods": {
                                            "default": [
                                              "*",
                                            ],
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          "allowOrigin": {
                                            "default": [
                                              "*",
                                            ],
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          "exposedHeaders": {
                                            "default": [],
                                            "items": {
                                              "type": "string",
                                            },
                                            "type": "array",
                                          },
                                          "maxAge": {
                                            "default": 0,
                                            "maximum": 86400,
                                            "minimum": 0,
                                            "type": "number",
                                          },
                                        },
                                        "type": "object",
                                      },
                                      "enabled": {
                                        "const": true,
                                        "type": "boolean",
                                      },
                                      "invokeMode": {
                                        "default": "Buffered",
                                        "enum": [
                                          "Buffered",
                                          "ResponseStream",
                                        ],
                                        "type": "string",
                                      },
                                    },
                                    "required": [
                                      "enabled",
                                    ],
                                    "type": "object",
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "enabled": {
                                        "const": false,
                                        "type": "boolean",
                                      },
                                    },
                                    "required": [
                                      "enabled",
                                    ],
                                    "type": "object",
                                  },
                                ],
                                "default": {
                                  "enabled": false,
                                },
                              },
                              "memory": {
                                "default": 512,
                                "maximum": 10240,
                                "minimum": 128,
                                "type": "number",
                              },
                              "packageType": {
                                "const": "image",
                                "type": "string",
                              },
                              "reservedConcurrency": {
                                "description": "Sets max concurrency allocated to lambda across the region. Reduces total concurrency units.",
                                "maximum": 900,
                                "minimum": 0,
                                "type": "number",
                              },
                              "storage": {
                                "default": 512,
                                "maximum": 10240,
                                "minimum": 512,
                                "type": "integer",
                              },
                              "timeoutSecs": {
                                "default": 30,
                                "maximum": 900,
                                "minimum": 1,
                                "type": "number",
                              },
                              "tracing": {
                                "default": true,
                                "type": "boolean",
                              },
                              "vpc": {
                                "default": false,
                                "description": "Place lambda within environment vpc",
                                "type": "boolean",
                              },
                            },
                            "required": [
                              "packageType",
                            ],
                            "type": "object",
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "cpuArchitecture": {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture",
                              },
                              "fnUrl": {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/fnUrl",
                              },
                              "handler": {
                                "type": "string",
                              },
                              "memory": {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/memory",
                              },
                              "packageType": {
                                "const": "zip",
                                "type": "string",
                              },
                              "reservedConcurrency": {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/reservedConcurrency",
                              },
                              "runtime": {
                                "enum": [
                                  "nodejs20.x",
                                  "nodejs22.x",
                                  "java8.al2",
                                  "java11",
                                  "java17",
                                  "java21",
                                  "python3.9",
                                  "python3.10",
                                  "python3.11",
                                  "python3.12",
                                  "dotnet8",
                                  "ruby3.2",
                                  "ruby3.3",
                                  "provided.al2",
                                  "provided.al2023",
                                ],
                                "type": "string",
                              },
                              "storage": {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/storage",
                              },
                              "timeoutSecs": {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/timeoutSecs",
                              },
                              "tracing": {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/tracing",
                              },
                              "vpc": {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/vpc",
                              },
                            },
                            "required": [
                              "packageType",
                              "handler",
                              "runtime",
                            ],
                            "type": "object",
                          },
                        ],
                      },
                      "name": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                      },
                      "outputDirectory": {
                        "description": "Output directory is required for zip lambda and unused for image lambda services",
                        "type": "string",
                      },
                      "type": {
                        "const": "lambda-function",
                        "type": "string",
                      },
                      "versionHistoryCount": {
                        "default": 10,
                        "maximum": 75,
                        "minimum": 1,
                        "type": "number",
                      },
                      "watchPaths": {
                        "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                      },
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "lambda",
                      "buildType",
                    ],
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "basePath": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                      },
                      "buildType": {
                        "const": "fromService",
                        "type": "string",
                      },
                      "ci": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                      },
                      "containerImage": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage/anyOf/1",
                      },
                      "dependsOn": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                      },
                      "envVariables": {
                        "$ref": "#/properties/envVariables",
                      },
                      "id": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                      },
                      "includeEnvVariablesInBuild": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/includeEnvVariablesInBuild",
                      },
                      "injectEnvVariablesInDockerfile": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/injectEnvVariablesInDockerfile",
                      },
                      "lambda": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda",
                      },
                      "name": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                      },
                      "type": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/type",
                      },
                      "versionHistoryCount": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/versionHistoryCount",
                      },
                      "watchPaths": {
                        "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                      },
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "lambda",
                      "buildType",
                      "containerImage",
                    ],
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "basePath": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                      },
                      "buildCommand": {
                        "type": "string",
                      },
                      "buildType": {
                        "const": "nixpacks",
                        "type": "string",
                      },
                      "ci": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                      },
                      "dependsOn": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                      },
                      "envVariables": {
                        "$ref": "#/properties/envVariables",
                      },
                      "id": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                      },
                      "includeEnvVariablesInBuild": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/includeEnvVariablesInBuild",
                      },
                      "injectEnvVariablesInDockerfile": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/injectEnvVariablesInDockerfile",
                      },
                      "installCommand": {
                        "type": "string",
                      },
                      "lambda": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/1",
                      },
                      "name": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                      },
                      "outputDirectory": {
                        "type": "string",
                      },
                      "postBuildCommand": {
                        "type": "string",
                      },
                      "type": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/type",
                      },
                      "versionHistoryCount": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/versionHistoryCount",
                      },
                      "watchPaths": {
                        "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                      },
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "lambda",
                      "buildType",
                      "outputDirectory",
                    ],
                    "type": "object",
                  },
                ],
              },
              {
                "additionalProperties": false,
                "properties": {
                  "blockAllPublicAccess": {
                    "default": true,
                    "type": "boolean",
                  },
                  "bucketNameBase": {
                    "maxLength": 56,
                    "minLength": 3,
                    "pattern": "(?!(^xn--))^[a-z0-9][a-z0-9-]+$",
                    "type": "string",
                  },
                  "bucketPolicy": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline",
                  },
                  "bucketVersioning": {
                    "default": false,
                    "type": "boolean",
                  },
                  "dependsOn": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                  },
                  "id": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                  },
                  "name": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                  },
                  "type": {
                    "const": "s3",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                  "name",
                  "type",
                  "bucketNameBase",
                ],
                "type": "object",
              },
              {
                "additionalProperties": false,
                "properties": {
                  "autoscaling": {
                    "additionalProperties": false,
                    "properties": {
                      "cooldownTimerSecs": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cooldownTimerSecs",
                      },
                      "cpuThreshold": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cpuThreshold",
                      },
                      "memoryThreshold": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/memoryThreshold",
                      },
                    },
                    "type": "object",
                  },
                  "basePath": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                  },
                  "buildCommand": {
                    "type": "string",
                  },
                  "buildType": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType",
                  },
                  "ci": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                  },
                  "containerImage": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage",
                  },
                  "containerInsights": {
                    "default": false,
                    "type": "boolean",
                  },
                  "cpu": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                  },
                  "dependsOn": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                  },
                  "dockerContext": {
                    "type": "string",
                  },
                  "dockerLabels": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                  },
                  "dockerfilePath": {
                    "type": "string",
                  },
                  "envVariables": {
                    "$ref": "#/properties/envVariables",
                  },
                  "gpu": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                  },
                  "id": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                  },
                  "includeEnvVariablesInBuild": {
                    "default": true,
                    "type": "boolean",
                  },
                  "injectEnvVariablesInDockerfile": {
                    "default": true,
                    "type": "boolean",
                  },
                  "installCommand": {
                    "type": "string",
                  },
                  "integrations": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                  },
                  "logging": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                  },
                  "maxInstances": {
                    "default": 1,
                    "minimum": 1,
                    "type": "number",
                  },
                  "memory": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                  },
                  "minInstances": {
                    "default": 1,
                    "minimum": 1,
                    "type": "number",
                  },
                  "name": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                  },
                  "permissions": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions",
                  },
                  "ports": {
                    "items": {
                      "anyOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "healthCheck": {
                              "additionalProperties": false,
                              "properties": {
                                "gracePeriodSecs": {
                                  "maximum": 2147483647,
                                  "minimum": 0,
                                  "type": "number",
                                },
                                "intervalSecs": {
                                  "maximum": 300,
                                  "minimum": 5,
                                  "type": "number",
                                },
                                "tcpPort": {
                                  "description": "This is the port that the load balancer will use to health check the service.",
                                  "type": "number",
                                },
                                "timeoutSecs": {
                                  "maximum": 120,
                                  "minimum": 2,
                                  "type": "number",
                                },
                              },
                              "required": [
                                "tcpPort",
                              ],
                              "type": "object",
                            },
                            "port": {
                              "type": "number",
                            },
                            "protocol": {
                              "const": "udp",
                              "type": "string",
                            },
                          },
                          "required": [
                            "port",
                            "protocol",
                            "healthCheck",
                          ],
                          "type": "object",
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "healthCheck": {
                              "additionalProperties": false,
                              "properties": {
                                "gracePeriodSecs": {
                                  "maximum": 2147483647,
                                  "minimum": 0,
                                  "type": "number",
                                },
                                "intervalSecs": {
                                  "maximum": 300,
                                  "minimum": 5,
                                  "type": "number",
                                },
                                "timeoutSecs": {
                                  "maximum": 120,
                                  "minimum": 2,
                                  "type": "number",
                                },
                              },
                              "type": "object",
                            },
                            "port": {
                              "type": "number",
                            },
                            "protocol": {
                              "const": "tcp",
                              "type": "string",
                            },
                            "tls": {
                              "default": true,
                              "type": "boolean",
                            },
                          },
                          "required": [
                            "port",
                            "protocol",
                            "healthCheck",
                          ],
                          "type": "object",
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "healthCheck": {
                              "additionalProperties": false,
                              "properties": {
                                "gracePeriodSecs": {
                                  "maximum": 2147483647,
                                  "minimum": 0,
                                  "type": "number",
                                },
                                "intervalSecs": {
                                  "maximum": 300,
                                  "minimum": 5,
                                  "type": "number",
                                },
                                "path": {
                                  "default": "/",
                                  "type": "string",
                                },
                                "timeoutSecs": {
                                  "maximum": 120,
                                  "minimum": 2,
                                  "type": "number",
                                },
                              },
                              "type": "object",
                            },
                            "port": {
                              "type": "number",
                            },
                            "protocol": {
                              "const": "http",
                              "type": "string",
                            },
                            "tls": {
                              "default": true,
                              "type": "boolean",
                            },
                          },
                          "required": [
                            "port",
                            "protocol",
                            "healthCheck",
                          ],
                          "type": "object",
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "healthCheck": {
                              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/ports/items/anyOf/2/properties/healthCheck",
                            },
                            "port": {
                              "type": "number",
                            },
                            "protocol": {
                              "const": "http2",
                              "type": "string",
                            },
                            "tls": {
                              "default": true,
                              "type": "boolean",
                            },
                          },
                          "required": [
                            "port",
                            "protocol",
                            "healthCheck",
                          ],
                          "type": "object",
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "healthCheck": {
                              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/ports/items/anyOf/1/properties/healthCheck",
                            },
                            "port": {
                              "type": "number",
                            },
                            "protocol": {
                              "const": "grpc",
                              "type": "string",
                            },
                            "tls": {
                              "default": true,
                              "type": "boolean",
                            },
                          },
                          "required": [
                            "port",
                            "protocol",
                            "healthCheck",
                          ],
                          "type": "object",
                        },
                      ],
                    },
                    "minItems": 1,
                    "type": "array",
                  },
                  "postBuildCommand": {
                    "type": "string",
                  },
                  "postDeployCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                  },
                  "preDeployCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                  },
                  "privileged": {
                    "default": false,
                    "type": "boolean",
                  },
                  "sidecars": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                  },
                  "startCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                  },
                  "storage": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                  },
                  "target": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target",
                    "default": {
                      "type": "fargate",
                    },
                  },
                  "type": {
                    "const": "network-server",
                    "type": "string",
                  },
                  "versionHistoryCount": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                  },
                  "watchPaths": {
                    "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                  },
                },
                "required": [
                  "id",
                  "name",
                  "cpu",
                  "memory",
                  "type",
                  "ports",
                ],
                "type": "object",
              },
              {
                "additionalProperties": false,
                "properties": {
                  "autoscaling": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/autoscaling",
                  },
                  "basePath": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                  },
                  "buildCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/buildCommand",
                  },
                  "buildType": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType",
                  },
                  "ci": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                  },
                  "containerImage": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/containerImage",
                  },
                  "containerInsights": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/containerInsights",
                  },
                  "cpu": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                  },
                  "dependsOn": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                  },
                  "dockerContext": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/dockerContext",
                  },
                  "dockerLabels": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                  },
                  "dockerfilePath": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/dockerfilePath",
                  },
                  "envVariables": {
                    "$ref": "#/properties/envVariables",
                  },
                  "gpu": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                  },
                  "id": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                  },
                  "includeEnvVariablesInBuild": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/includeEnvVariablesInBuild",
                  },
                  "injectEnvVariablesInDockerfile": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/injectEnvVariablesInDockerfile",
                  },
                  "installCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/installCommand",
                  },
                  "integrations": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                  },
                  "logging": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                  },
                  "maxInstances": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/maxInstances",
                  },
                  "memory": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                  },
                  "minInstances": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/minInstances",
                  },
                  "name": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                  },
                  "permissions": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/permissions",
                  },
                  "ports": {
                    "items": {
                      "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/ports/items",
                    },
                    "minItems": 1,
                    "type": "array",
                  },
                  "postBuildCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/postBuildCommand",
                  },
                  "postDeployCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/postDeployCommand",
                  },
                  "preDeployCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/preDeployCommand",
                  },
                  "privileged": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/privileged",
                  },
                  "sidecars": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                  },
                  "startCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/startCommand",
                  },
                  "storage": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                  },
                  "target": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/target",
                  },
                  "type": {
                    "const": "private-network-server",
                    "type": "string",
                  },
                  "versionHistoryCount": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                  },
                  "watchPaths": {
                    "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                  },
                },
                "required": [
                  "id",
                  "name",
                  "cpu",
                  "memory",
                  "type",
                  "ports",
                ],
                "type": "object",
              },
            ],
          },
          "type": "array",
        },
        "source": {
          "anyOf": [
            {
              "additionalProperties": false,
              "properties": {
                "filter": {
                  "additionalProperties": false,
                  "properties": {
                    "fromBranches": {
                      "anyOf": [
                        {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                        },
                        {
                          "items": {
                            "type": "null",
                          },
                          "type": "array",
                        },
                      ],
                    },
                    "labels": {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "toBranch": {
                      "anyOf": [
                        {
                          "type": "string",
                        },
                        {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                        },
                      ],
                    },
                    "toBranches": {
                      "anyOf": [
                        {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                        },
                        {
                          "items": {
                            "type": "null",
                          },
                          "type": "array",
                        },
                      ],
                    },
                    "watchPaths": {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
                "pr": {
                  "const": true,
                  "type": "boolean",
                },
                "trigger": {
                  "default": "push",
                  "enum": [
                    "push",
                    "manual",
                  ],
                  "type": "string",
                },
              },
              "required": [
                "pr",
              ],
              "type": "object",
            },
            {
              "additionalProperties": false,
              "properties": {
                "branch": {
                  "type": "string",
                },
                "pr": {
                  "const": false,
                  "default": false,
                  "type": "boolean",
                },
                "trigger": {
                  "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/trigger",
                },
              },
              "required": [
                "branch",
              ],
              "type": "object",
            },
          ],
        },
        "vpc": {
          "additionalProperties": false,
          "properties": {
            "cidr": {
              "type": "string",
            },
            "id": {
              "type": "string",
            },
            "private": {
              "default": false,
              "type": "boolean",
            },
          },
          "type": "object",
        },
      },
      "required": [
        "name",
        "region",
        "source",
        "services",
        "id",
      ],
      "type": "object",
    },
    "primaryKey": "id",
    "requiredFields":     
Set {
      "name",
      "region",
      "source",
      "services",
      "id",
    }
,
    "strategy": "primaryKey",
  },
  "/environments/source/filter/labels" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/source/filter/toBranches" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "null",
    },
    "primaryKey": null,
    "strategy": "lcs",
  },
  "/environments/source/filter/toBranch" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/source/filter/fromBranches" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "null",
    },
    "primaryKey": null,
    "strategy": "lcs",
  },
  "/environments/source/filter/watchPaths" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services" => {
    "compiledDiff": [Function],
    "hashFields": [
      "id",
      "name",
      "cpu",
      "memory",
      "type",
    ],
    "itemSchema": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "autoscaling": {
              "additionalProperties": false,
              "properties": {
                "cooldownTimerSecs": {
                  "type": "number",
                },
                "cpuThreshold": {
                  "type": "number",
                },
                "memoryThreshold": {
                  "type": "number",
                },
                "requestsPerTarget": {
                  "type": "number",
                },
              },
              "type": "object",
            },
            "basePath": {
              "default": ".",
              "minLength": 1,
              "type": "string",
            },
            "buildCommand": {
              "type": "string",
            },
            "buildType": {
              "enum": [
                "nodejs",
                "nixpacks",
                "docker",
                "fromService",
                "fromRepository",
              ],
              "type": "string",
            },
            "ci": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "const": "codebuild",
                      "type": "string",
                    },
                  },
                  "required": [
                    "type",
                  ],
                  "type": "object",
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "instanceSize": {
                      "type": "string",
                    },
                    "instanceStorage": {
                      "default": 30,
                      "type": "number",
                    },
                    "storageIops": {
                      "default": 3000,
                      "type": "number",
                    },
                    "storageThroughput": {
                      "default": 125,
                      "type": "number",
                    },
                    "storageType": {
                      "default": "gp3",
                      "enum": [
                        "gp3",
                        "gp2",
                        "io1",
                        "io2",
                      ],
                      "type": "string",
                    },
                    "type": {
                      "const": "ec2",
                      "type": "string",
                    },
                  },
                  "required": [
                    "type",
                  ],
                  "type": "object",
                },
              ],
              "default": {
                "type": "codebuild",
              },
            },
            "cloudfrontAutoCacheInvalidation": {
              "default": true,
              "type": "boolean",
            },
            "containerImage": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "registryId": {
                      "minLength": 1,
                      "type": "string",
                    },
                    "repository": {
                      "minLength": 1,
                      "type": "string",
                    },
                    "tag": {
                      "default": "latest",
                      "minLength": 1,
                      "type": "string",
                    },
                  },
                  "required": [
                    "registryId",
                    "repository",
                  ],
                  "type": "object",
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "fromService": {
                      "minLength": 1,
                      "type": "string",
                    },
                  },
                  "required": [
                    "fromService",
                  ],
                  "type": "object",
                },
              ],
            },
            "containerInsights": {
              "default": false,
              "type": "boolean",
            },
            "cpu": {
              "minimum": 0.125,
              "type": "number",
            },
            "dependsOn": {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
            "dockerContext": {
              "type": "string",
            },
            "dockerLabels": {
              "additionalProperties": {
                "type": "string",
              },
              "type": "object",
            },
            "dockerfilePath": {
              "type": "string",
            },
            "enableCloudfrontSwr": {
              "default": false,
              "type": "boolean",
            },
            "envVariables": {
              "$ref": "#/properties/envVariables",
            },
            "experimental": {
              "additionalProperties": false,
              "properties": {
                "datadog": {
                  "additionalProperties": false,
                  "properties": {
                    "datadogApiKey": {
                      "type": "string",
                    },
                    "datadogSite": {
                      "type": "string",
                    },
                    "enabled": {
                      "type": "boolean",
                    },
                    "envVariables": {
                      "$ref": "#/properties/envVariables",
                    },
                    "logging": {
                      "default": false,
                      "type": "boolean",
                    },
                  },
                  "required": [
                    "enabled",
                    "datadogSite",
                    "datadogApiKey",
                  ],
                  "type": "object",
                },
                "healthCheckInterval": {
                  "maximum": 300,
                  "minimum": 5,
                  "type": "number",
                },
                "healthCheckTimeout": {
                  "maximum": 120,
                  "minimum": 2,
                  "type": "number",
                },
                "runAsNonRootUser": {
                  "default": false,
                  "type": "boolean",
                },
              },
              "type": "object",
            },
            "gpu": {
              "maximum": 16,
              "minimum": 0,
              "type": "number",
            },
            "healthCheckGracePeriodSecs": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "number",
            },
            "healthCheckIntervalSecs": {
              "default": 30,
              "maximum": 300,
              "minimum": 5,
              "type": "number",
            },
            "healthCheckPath": {
              "default": "/",
              "pattern": "^\\/[!-~]*$",
              "type": "string",
            },
            "healthCheckTimeoutSecs": {
              "default": 5,
              "maximum": 120,
              "minimum": 2,
              "type": "number",
            },
            "id": {
              "maxLength": 191,
              "minLength": 1,
              "type": "string",
            },
            "includeEnvVariablesInBuild": {
              "default": true,
              "type": "boolean",
            },
            "injectEnvVariablesInDockerfile": {
              "default": true,
              "type": "boolean",
            },
            "installCommand": {
              "type": "string",
            },
            "integrations": {
              "additionalProperties": false,
              "properties": {
                "uploadSentrySourceMap": {
                  "default": false,
                  "type": "boolean",
                },
              },
              "type": "object",
            },
            "logging": {
              "additionalProperties": false,
              "properties": {
                "cloudwatchLogsEnabled": {
                  "default": true,
                  "type": "boolean",
                },
                "cloudwatchLogsRetentionDays": {
                  "maximum": 3653,
                  "minimum": 1,
                  "type": "number",
                },
                "ecsLogsMetadataEnabled": {
                  "default": false,
                  "type": "boolean",
                },
                "envVariables": {
                  "$ref": "#/properties/envVariables",
                },
                "firelens": {
                  "anyOf": [
                    {
                      "additionalProperties": false,
                      "properties": {
                        "config": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "match": {
                                "type": "string",
                              },
                              "name": {
                                "type": "string",
                              },
                              "options": {
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                    },
                                    {
                                      "type": "number",
                                    },
                                    {
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                  ],
                                },
                                "type": "object",
                              },
                            },
                            "required": [
                              "name",
                              "match",
                              "options",
                            ],
                            "type": "object",
                          },
                          "type": "array",
                        },
                        "configSource": {
                          "const": "inline",
                          "type": "string",
                        },
                      },
                      "required": [
                        "configSource",
                        "config",
                      ],
                      "type": "object",
                    },
                    {
                      "additionalProperties": false,
                      "properties": {
                        "configFilePath": {
                          "type": "string",
                        },
                        "configSource": {
                          "const": "file",
                          "type": "string",
                        },
                      },
                      "required": [
                        "configSource",
                        "configFilePath",
                      ],
                      "type": "object",
                    },
                  ],
                },
              },
              "type": "object",
            },
            "maxInstances": {
              "default": 1,
              "minimum": 1,
              "type": "number",
            },
            "memory": {
              "minimum": 0.125,
              "type": "number",
            },
            "minInstances": {
              "default": 1,
              "minimum": 1,
              "type": "number",
            },
            "name": {
              "maxLength": 191,
              "minLength": 1,
              "type": "string",
            },
            "originShieldEnabled": {
              "default": true,
              "type": "boolean",
            },
            "permissions": {
              "additionalProperties": false,
              "properties": {
                "attach": {
                  "items": {
                    "pattern": "^arn",
                    "type": "string",
                  },
                  "type": "array",
                },
                "inline": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": [
                              "string",
                              "number",
                              "boolean",
                              "null",
                            ],
                          },
                          {
                            "items": {
                              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline/anyOf/0/additionalProperties",
                            },
                            "type": "array",
                          },
                          {
                            "additionalProperties": {
                              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline/anyOf/0/additionalProperties",
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "type": "object",
                    },
                    {
                      "type": "string",
                    },
                  ],
                },
              },
              "type": "object",
            },
            "port": {
              "default": 3000,
              "type": [
                "number",
                "string",
              ],
            },
            "postBuildCommand": {
              "type": "string",
            },
            "postDeployCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
            },
            "preDeployCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
            },
            "privileged": {
              "default": false,
              "type": "boolean",
            },
            "sidecars": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "cpuAllotment": {
                    "minimum": 0,
                    "type": "number",
                  },
                  "dockerLabels": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                  },
                  "enableNetworking": {
                    "default": true,
                    "type": "boolean",
                  },
                  "envVariables": {
                    "$ref": "#/properties/envVariables",
                  },
                  "essential": {
                    "default": false,
                    "type": "boolean",
                  },
                  "image": {
                    "type": "string",
                  },
                  "logging": {
                    "default": false,
                    "type": "boolean",
                  },
                  "memoryAllotment": {
                    "minimum": 0,
                    "type": "number",
                  },
                  "name": {
                    "type": "string",
                  },
                  "ports": {
                    "items": {
                      "type": "number",
                    },
                    "type": "array",
                  },
                  "startCommand": {
                    "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                  },
                },
                "required": [
                  "cpuAllotment",
                  "memoryAllotment",
                  "name",
                  "image",
                ],
                "type": "object",
              },
              "type": "array",
            },
            "startCommand": {
              "anyOf": [
                {
                  "type": "string",
                },
                {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              ],
            },
            "stickySessionsDurationSecs": {
              "default": 86400,
              "type": "number",
            },
            "stickySessionsEnabled": {
              "default": false,
              "type": "boolean",
            },
            "storage": {
              "maximum": 200,
              "minimum": 20,
              "type": "integer",
            },
            "target": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "const": "fargate",
                      "type": "string",
                    },
                  },
                  "required": [
                    "type",
                  ],
                  "type": "object",
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "clusterInstanceSize": {
                      "type": "string",
                    },
                    "clusterMaxInstances": {
                      "type": "number",
                    },
                    "clusterMinInstances": {
                      "minimum": 1,
                      "type": "number",
                    },
                    "type": {
                      "const": "ecs-ec2",
                      "type": "string",
                    },
                  },
                  "required": [
                    "type",
                    "clusterInstanceSize",
                    "clusterMinInstances",
                    "clusterMaxInstances",
                  ],
                  "type": "object",
                },
              ],
              "default": {
                "type": "fargate",
              },
            },
            "type": {
              "const": "web",
              "type": "string",
            },
            "versionHistoryCount": {
              "default": 10,
              "minimum": 1,
              "type": "number",
            },
            "watchPaths": {
              "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
            },
          },
          "required": [
            "id",
            "name",
            "cpu",
            "memory",
            "type",
          ],
          "type": "object",
        },
        {
          "additionalProperties": false,
          "properties": {
            "autoscaling": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling",
            },
            "basePath": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
            },
            "buildCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildCommand",
            },
            "buildType": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType",
            },
            "ci": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
            },
            "cloudfrontAutoCacheInvalidation": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cloudfrontAutoCacheInvalidation",
            },
            "containerImage": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage",
            },
            "containerInsights": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerInsights",
            },
            "cpu": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
            },
            "dependsOn": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
            },
            "dockerContext": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerContext",
            },
            "dockerLabels": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
            },
            "dockerfilePath": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerfilePath",
            },
            "envVariables": {
              "$ref": "#/properties/envVariables",
            },
            "experimental": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/experimental",
            },
            "gpu": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
            },
            "healthCheckGracePeriodSecs": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckGracePeriodSecs",
            },
            "healthCheckIntervalSecs": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckIntervalSecs",
            },
            "healthCheckPath": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckPath",
            },
            "healthCheckTimeoutSecs": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckTimeoutSecs",
            },
            "id": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
            },
            "includeEnvVariablesInBuild": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/includeEnvVariablesInBuild",
            },
            "injectEnvVariablesInDockerfile": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/injectEnvVariablesInDockerfile",
            },
            "installCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/installCommand",
            },
            "integrations": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
            },
            "logging": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
            },
            "maxInstances": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/maxInstances",
            },
            "memory": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
            },
            "minInstances": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/minInstances",
            },
            "name": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
            },
            "originShieldEnabled": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/originShieldEnabled",
            },
            "permissions": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions",
            },
            "port": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/port",
            },
            "postBuildCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postBuildCommand",
            },
            "postDeployCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postDeployCommand",
            },
            "preDeployCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/preDeployCommand",
            },
            "privileged": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/privileged",
            },
            "sidecars": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
            },
            "startCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
            },
            "stickySessionsDurationSecs": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/stickySessionsDurationSecs",
            },
            "stickySessionsEnabled": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/stickySessionsEnabled",
            },
            "storage": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
            },
            "target": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target",
            },
            "type": {
              "const": "web-private",
              "type": "string",
            },
            "versionHistoryCount": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
            },
            "watchPaths": {
              "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
            },
          },
          "required": [
            "id",
            "name",
            "cpu",
            "memory",
            "type",
          ],
          "type": "object",
        },
        {
          "anyOf": [
            {
              "additionalProperties": false,
              "properties": {
                "applyChangesImmediately": {
                  "default": false,
                  "type": "boolean",
                },
                "autoUpgradeMinorVersions": {
                  "default": true,
                  "type": "boolean",
                },
                "backupRetentionPeriodInDays": {
                  "default": 35,
                  "maximum": 35,
                  "minimum": 0,
                  "type": "number",
                },
                "connectionStringEnvVarName": {
                  "pattern": "^\\w+$",
                  "type": "string",
                },
                "deleteBackupsWithRdsDeletion": {
                  "default": true,
                  "type": "boolean",
                },
                "deletionProtection": {
                  "default": false,
                  "type": "boolean",
                },
                "dependsOn": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                },
                "encryptionAtRest": {
                  "default": false,
                  "type": "boolean",
                },
                "engine": {
                  "const": "mysql",
                  "type": "string",
                },
                "engineVersion": {
                  "enum": [
                    "5.6",
                    "5.7",
                    "8.0",
                    "8",
                  ],
                  "type": "string",
                },
                "id": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                },
                "instanceSize": {
                  "type": "string",
                },
                "maxStorage": {
                  "default": 100,
                  "maximum": 65536,
                  "type": "integer",
                },
                "multiAvailabilityZones": {
                  "default": false,
                  "type": "boolean",
                },
                "name": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                },
                "performanceInsights": {
                  "default": false,
                  "type": "boolean",
                },
                "port": {
                  "type": "number",
                },
                "private": {
                  "default": false,
                  "type": "boolean",
                },
                "storage": {
                  "maximum": 65536,
                  "minimum": 20,
                  "type": "integer",
                },
                "storageProvisionedIops": {
                  "minimum": 1000,
                  "type": "number",
                },
                "storageType": {
                  "default": "gp2",
                  "enum": [
                    "gp3",
                    "gp2",
                    "io1",
                    "io2",
                  ],
                  "type": "string",
                },
                "type": {
                  "const": "rds",
                  "type": "string",
                },
              },
              "required": [
                "id",
                "name",
                "type",
                "instanceSize",
                "storage",
                "engine",
                "engineVersion",
              ],
              "type": "object",
            },
            {
              "additionalProperties": false,
              "properties": {
                "applyChangesImmediately": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/applyChangesImmediately",
                },
                "autoUpgradeMinorVersions": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/autoUpgradeMinorVersions",
                },
                "backupRetentionPeriodInDays": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/backupRetentionPeriodInDays",
                },
                "connectionStringEnvVarName": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/connectionStringEnvVarName",
                },
                "deleteBackupsWithRdsDeletion": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deleteBackupsWithRdsDeletion",
                },
                "deletionProtection": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deletionProtection",
                },
                "dependsOn": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                },
                "encryptionAtRest": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/encryptionAtRest",
                },
                "engine": {
                  "const": "postgres",
                  "type": "string",
                },
                "engineVersion": {
                  "enum": [
                    "9",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                  ],
                  "type": "string",
                },
                "id": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                },
                "instanceSize": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/instanceSize",
                },
                "maxStorage": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/maxStorage",
                },
                "multiAvailabilityZones": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/multiAvailabilityZones",
                },
                "name": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                },
                "performanceInsights": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/performanceInsights",
                },
                "port": {
                  "type": "number",
                },
                "private": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/private",
                },
                "storage": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storage",
                },
                "storageProvisionedIops": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageProvisionedIops",
                },
                "storageType": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageType",
                },
                "type": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/type",
                },
              },
              "required": [
                "id",
                "name",
                "type",
                "instanceSize",
                "storage",
                "engine",
                "engineVersion",
              ],
              "type": "object",
            },
            {
              "additionalProperties": false,
              "properties": {
                "applyChangesImmediately": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/applyChangesImmediately",
                },
                "autoUpgradeMinorVersions": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/autoUpgradeMinorVersions",
                },
                "backupRetentionPeriodInDays": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/backupRetentionPeriodInDays",
                },
                "connectionStringEnvVarName": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/connectionStringEnvVarName",
                },
                "deleteBackupsWithRdsDeletion": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deleteBackupsWithRdsDeletion",
                },
                "deletionProtection": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deletionProtection",
                },
                "dependsOn": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                },
                "encryptionAtRest": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/encryptionAtRest",
                },
                "engine": {
                  "const": "mariadb",
                  "type": "string",
                },
                "engineVersion": {
                  "enum": [
                    "10.2",
                    "10.3",
                    "10.4",
                    "10.5",
                    "10.6",
                  ],
                  "type": "string",
                },
                "id": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                },
                "instanceSize": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/instanceSize",
                },
                "maxStorage": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/maxStorage",
                },
                "multiAvailabilityZones": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/multiAvailabilityZones",
                },
                "name": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                },
                "performanceInsights": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/performanceInsights",
                },
                "port": {
                  "type": "number",
                },
                "private": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/private",
                },
                "storage": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storage",
                },
                "storageProvisionedIops": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageProvisionedIops",
                },
                "storageType": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageType",
                },
                "type": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/type",
                },
              },
              "required": [
                "id",
                "name",
                "type",
                "instanceSize",
                "storage",
                "engine",
                "engineVersion",
              ],
              "type": "object",
            },
          ],
        },
        {
          "additionalProperties": false,
          "properties": {
            "basePath": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
            },
            "buildCommand": {
              "type": "string",
            },
            "buildType": {
              "enum": [
                "nodejs",
                "nixpacks",
                "docker",
              ],
              "type": "string",
            },
            "ci": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
            },
            "cloudfrontAutoCacheInvalidation": {
              "default": true,
              "type": "boolean",
            },
            "dependsOn": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
            },
            "dockerContext": {
              "type": "string",
            },
            "dockerfilePath": {
              "type": "string",
            },
            "envVariables": {
              "$ref": "#/properties/envVariables",
            },
            "id": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
            },
            "installCommand": {
              "type": "string",
            },
            "integrations": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
            },
            "name": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
            },
            "originShieldEnabled": {
              "default": true,
              "type": "boolean",
            },
            "outputDirectory": {
              "default": "public",
              "type": "string",
            },
            "postBuildCommand": {
              "type": "string",
            },
            "singlePageApp": {
              "default": false,
              "type": "boolean",
            },
            "type": {
              "const": "static",
              "type": "string",
            },
            "versionHistoryCount": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
            },
            "watchPaths": {
              "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
            },
          },
          "required": [
            "id",
            "name",
            "type",
          ],
          "type": "object",
        },
        {
          "additionalProperties": false,
          "properties": {
            "autoscaling": {
              "additionalProperties": false,
              "properties": {
                "cooldownTimerSecs": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cooldownTimerSecs",
                },
                "cpuThreshold": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cpuThreshold",
                },
                "memoryThreshold": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/memoryThreshold",
                },
              },
              "type": "object",
            },
            "basePath": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
            },
            "buildCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildCommand",
            },
            "buildType": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType",
            },
            "ci": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
            },
            "cloudfrontAutoCacheInvalidation": {
              "default": true,
              "type": "boolean",
            },
            "containerImage": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage",
            },
            "containerInsights": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerInsights",
            },
            "cpu": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
            },
            "dependsOn": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
            },
            "dockerContext": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerContext",
            },
            "dockerLabels": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
            },
            "dockerfilePath": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerfilePath",
            },
            "envVariables": {
              "$ref": "#/properties/envVariables",
            },
            "experimental": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/experimental",
            },
            "gpu": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
            },
            "id": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
            },
            "includeEnvVariablesInBuild": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/includeEnvVariablesInBuild",
            },
            "injectEnvVariablesInDockerfile": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/injectEnvVariablesInDockerfile",
            },
            "installCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/installCommand",
            },
            "integrations": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
            },
            "logging": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
            },
            "maxInstances": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/maxInstances",
            },
            "memory": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
            },
            "minInstances": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/minInstances",
            },
            "name": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
            },
            "permissions": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions",
            },
            "postBuildCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postBuildCommand",
            },
            "postDeployCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postDeployCommand",
            },
            "preDeployCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/preDeployCommand",
            },
            "privileged": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/privileged",
            },
            "sidecars": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
            },
            "startCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
            },
            "storage": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
            },
            "target": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target",
            },
            "type": {
              "const": "worker",
              "type": "string",
            },
            "versionHistoryCount": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
            },
            "watchPaths": {
              "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
            },
          },
          "required": [
            "id",
            "name",
            "cpu",
            "memory",
            "type",
          ],
          "type": "object",
        },
        {
          "additionalProperties": false,
          "properties": {
            "applyChangesImmediately": {
              "default": false,
              "description": "Not applicable at the moment. If there are changes that can be applied, and this is set to TRUE, they will be applied immediately (with downtime) instead of during next maintenance window. Applicable when changes are made.",
              "type": "boolean",
            },
            "autoMinorVersionUpgrade": {
              "default": true,
              "type": "boolean",
            },
            "clusterMode": {
              "const": false,
              "default": false,
              "description": "Defaults to false as it is not supported yet",
              "type": "boolean",
            },
            "connectionStringEnvVarName": {
              "description": "The name of the environment variable that will contain the connecting string URL and that will be available to all other services in the same environment.",
              "pattern": "^\\w+$",
              "type": "string",
            },
            "dependsOn": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
            },
            "encryptionAtRest": {
              "default": true,
              "type": "boolean",
            },
            "engine": {
              "const": "redis",
              "description": "The cache engine to be created in AWS Elasticache",
              "type": "string",
            },
            "engineVersion": {
              "enum": [
                "7.1",
                "7.0",
                "6.2",
                "6.0",
                "5.0.6",
                "5.0.5",
                "5.0.4",
                "5.0.3",
                "5.0.0",
                "4.0.10",
                "3.2.10",
                "3.2.6",
                "3.2.4",
                "2.8.24",
                "2.8.23",
                "2.8.22",
                "2.8.21",
                "2.8.19",
                "2.8.6",
                "2.6.13",
              ],
              "type": "string",
            },
            "evictionPolicy": {
              "default": "volatile-lru",
              "enum": [
                "volatile-lru",
                "allkeys-lru",
                "volatile-lfu",
                "allkeys-lfu",
                "volatile-random",
                "allkeys-random",
                "volatile-ttl",
                "noeviction",
              ],
              "type": "string",
            },
            "id": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
            },
            "instanceSize": {
              "description": "The AWS instance size",
              "enum": [
                "cache.t4g.micro",
                "cache.t3.micro",
                "cache.t4g.small",
                "cache.t3.small",
                "cache.t4g.medium",
                "cache.t3.medium",
                "cache.m7g.large",
                "cache.m6g.large",
                "cache.r7g.large",
                "cache.r6g.large",
                "cache.r5.large",
                "cache.c7gn.large",
                "cache.m7g.xlarge",
                "cache.m6g.xlarge",
                "cache.m5.xlarge",
                "cache.r7g.xlarge",
                "cache.r6g.xlarge",
                "cache.r5.xlarge",
                "cache.c7gn.xlarge",
                "cache.m7g.2xlarge",
                "cache.m6g.2xlarge",
                "cache.m5.2xlarge",
                "cache.r7g.2xlarge",
                "cache.r6gd.xlarge",
                "cache.r6g.2xlarge",
                "cache.r5.2xlarge",
                "cache.c7gn.2xlarge",
                "cache.m7g.4xlarge",
                "cache.m6g.4xlarge",
                "cache.m5.4xlarge",
                "cache.r6gd.2xlarge",
                "cache.r7g.4xlarge",
                "cache.r6g.4xlarge",
                "cache.r6gd.4xlarge",
                "cache.r5.4xlarge",
                "cache.c7gn.4xlarge",
                "cache.m7g.8xlarge",
                "cache.m6g.8xlarge",
                "cache.r6gd.8xlarge",
                "cache.r7g.8xlarge",
                "cache.r6g.8xlarge",
                "cache.c7gn.8xlarge",
                "cache.m7g.12xlarge",
                "cache.m6g.12xlarge",
                "cache.m5.12xlarge",
                "cache.r7g.12xlarge",
                "cache.m6g.16xlarge",
                "cache.r6g.12xlarge",
                "cache.r5.12xlarge",
                "cache.c7gn.12xlarge",
                "cache.r6g.16xlarge",
                "cache.m5.24xlarge",
                "cache.r6gd.12xlarge",
                "cache.r5.24xlarge",
                "cache.r7g.16xlarge",
                "cache.r6gd.16xlarge",
                "cache.m7g.16xlarge",
                "cache.c7gn.16xlarge",
                "cache.m3.2xlarge",
                "cache.m4.xlarge",
                "cache.r4.xlarge",
                "cache.r3.large",
                "cache.m4.2xlarge",
                "cache.r3.xlarge",
                "cache.m4.large",
                "cache.r4.8xlarge",
                "cache.r4.16xlarge",
                "cache.r4.4xlarge",
                "cache.m4.4xlarge",
                "cache.m1.medium",
                "cache.m1.xlarge",
                "cache.t1.micro",
                "cache.m2.2xlarge",
                "cache.m4.10xlarge",
                "cache.t2.medium",
                "cache.m3.large",
                "cache.t2.small",
                "cache.t2.micro",
                "cache.m2.xlarge",
                "cache.r3.8xlarge",
                "cache.m3.medium",
                "cache.r4.2xlarge",
                "cache.m2.4xlarge",
                "cache.r3.4xlarge",
                "cache.m3.xlarge",
                "cache.m1.large",
                "cache.r3.2xlarge",
                "cache.r4.large",
                "cache.c1.xlarge",
                "cache.m1.small",
              ],
              "type": "string",
            },
            "name": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
            },
            "numberOfReplicas": {
              "default": 1,
              "description": "The number of replicas you want in your Redis service",
              "type": "number",
            },
            "port": {
              "default": 6379,
              "type": "number",
            },
            "type": {
              "const": "elasticache",
              "type": "string",
            },
          },
          "required": [
            "id",
            "name",
            "type",
            "engine",
            "instanceSize",
            "engineVersion",
          ],
          "type": "object",
        },
        {
          "anyOf": [
            {
              "additionalProperties": false,
              "properties": {
                "basePath": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                },
                "buildCommand": {
                  "type": "string",
                },
                "buildType": {
                  "const": "nixpacks",
                  "type": "string",
                },
                "ci": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                },
                "containerInsights": {
                  "default": false,
                  "type": "boolean",
                },
                "cpu": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                },
                "cpuArchitecture": {
                  "anyOf": [
                    {
                      "enum": [
                        "x86_64",
                        "x86-64",
                        "arm64",
                        "amd64",
                      ],
                      "type": "string",
                    },
                    {
                      "items": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture/anyOf/0",
                      },
                      "type": "array",
                    },
                  ],
                  "default": "x86_64",
                },
                "dependsOn": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                },
                "dockerLabels": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                },
                "envVariables": {
                  "$ref": "#/properties/envVariables",
                },
                "experimental": {
                  "additionalProperties": false,
                  "properties": {
                    "runAsNonRootUser": {
                      "default": false,
                      "type": "boolean",
                    },
                  },
                  "type": "object",
                },
                "gpu": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                },
                "id": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                },
                "includeEnvVariablesInBuild": {
                  "default": true,
                  "type": "boolean",
                },
                "injectEnvVariablesInDockerfile": {
                  "default": true,
                  "type": "boolean",
                },
                "installCommand": {
                  "type": "string",
                },
                "integrations": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                },
                "jobs": {
                  "additionalProperties": {
                    "additionalProperties": false,
                    "properties": {
                      "cpu": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "not": {},
                              },
                              {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                              },
                            ],
                          },
                          {
                            "type": "null",
                          },
                        ],
                      },
                      "gpu": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "not": {},
                              },
                              {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                              },
                            ],
                          },
                          {
                            "type": "null",
                          },
                        ],
                      },
                      "memory": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "not": {},
                              },
                              {
                                "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                              },
                            ],
                          },
                          {
                            "type": "null",
                          },
                        ],
                      },
                      "schedule": {
                        "type": "string",
                      },
                      "startCommand": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                      },
                      "timeout": {
                        "default": 480,
                        "description": "Timeout in minutes",
                        "maximum": 1440,
                        "minimum": 1,
                        "type": "number",
                      },
                      "timezone": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "startCommand",
                      "schedule",
                    ],
                    "type": "object",
                  },
                  "type": "object",
                },
                "logging": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                },
                "memory": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                },
                "name": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                },
                "permissions": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions",
                },
                "postBuildCommand": {
                  "type": "string",
                },
                "postDeployCommand": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                },
                "preDeployCommand": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
                },
                "sidecars": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                },
                "storage": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                },
                "target": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target",
                  "default": {
                    "type": "fargate",
                  },
                },
                "type": {
                  "const": "scheduler",
                  "type": "string",
                },
                "versionHistoryCount": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                },
                "watchPaths": {
                  "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                },
              },
              "required": [
                "id",
                "name",
                "type",
                "cpu",
                "memory",
                "jobs",
                "buildType",
              ],
              "type": "object",
            },
            {
              "additionalProperties": false,
              "properties": {
                "basePath": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                },
                "buildType": {
                  "const": "fromService",
                  "type": "string",
                },
                "ci": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                },
                "containerImage": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage/anyOf/1",
                },
                "containerInsights": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/containerInsights",
                },
                "cpu": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                },
                "cpuArchitecture": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture",
                },
                "dependsOn": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                },
                "dockerLabels": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                },
                "envVariables": {
                  "$ref": "#/properties/envVariables",
                },
                "experimental": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/experimental",
                },
                "gpu": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                },
                "id": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                },
                "includeEnvVariablesInBuild": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/includeEnvVariablesInBuild",
                },
                "injectEnvVariablesInDockerfile": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/injectEnvVariablesInDockerfile",
                },
                "integrations": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                },
                "jobs": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/jobs",
                },
                "logging": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                },
                "memory": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                },
                "name": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                },
                "permissions": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/permissions",
                },
                "postDeployCommand": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/postDeployCommand",
                },
                "preDeployCommand": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/preDeployCommand",
                },
                "sidecars": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                },
                "storage": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                },
                "target": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/target",
                },
                "type": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/type",
                },
                "versionHistoryCount": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                },
                "watchPaths": {
                  "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                },
              },
              "required": [
                "id",
                "name",
                "type",
                "cpu",
                "memory",
                "jobs",
                "buildType",
                "containerImage",
              ],
              "type": "object",
            },
            {
              "additionalProperties": false,
              "properties": {
                "basePath": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                },
                "buildType": {
                  "const": "docker",
                  "type": "string",
                },
                "ci": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                },
                "containerInsights": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/containerInsights",
                },
                "cpu": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                },
                "cpuArchitecture": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture",
                },
                "dependsOn": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                },
                "dockerContext": {
                  "type": "string",
                },
                "dockerLabels": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                },
                "dockerfilePath": {
                  "type": "string",
                },
                "envVariables": {
                  "$ref": "#/properties/envVariables",
                },
                "experimental": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/experimental",
                },
                "gpu": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                },
                "id": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                },
                "includeEnvVariablesInBuild": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/includeEnvVariablesInBuild",
                },
                "injectEnvVariablesInDockerfile": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/injectEnvVariablesInDockerfile",
                },
                "integrations": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                },
                "jobs": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/jobs",
                },
                "logging": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                },
                "memory": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                },
                "name": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                },
                "permissions": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/permissions",
                },
                "postDeployCommand": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/postDeployCommand",
                },
                "preDeployCommand": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/preDeployCommand",
                },
                "sidecars": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                },
                "storage": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                },
                "target": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/target",
                },
                "type": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/type",
                },
                "versionHistoryCount": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                },
                "watchPaths": {
                  "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                },
              },
              "required": [
                "id",
                "name",
                "type",
                "cpu",
                "memory",
                "jobs",
                "buildType",
              ],
              "type": "object",
            },
            {
              "additionalProperties": false,
              "properties": {
                "basePath": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                },
                "buildType": {
                  "const": "fromRepository",
                  "type": "string",
                },
                "ci": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                },
                "containerImage": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage/anyOf/0",
                },
                "containerInsights": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/containerInsights",
                },
                "cpu": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
                },
                "cpuArchitecture": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture",
                },
                "dependsOn": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                },
                "dockerLabels": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                },
                "envVariables": {
                  "$ref": "#/properties/envVariables",
                },
                "experimental": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/experimental",
                },
                "gpu": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
                },
                "id": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                },
                "includeEnvVariablesInBuild": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/includeEnvVariablesInBuild",
                },
                "injectEnvVariablesInDockerfile": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/injectEnvVariablesInDockerfile",
                },
                "integrations": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
                },
                "jobs": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/jobs",
                },
                "logging": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
                },
                "memory": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
                },
                "name": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                },
                "permissions": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/permissions",
                },
                "postDeployCommand": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/postDeployCommand",
                },
                "preDeployCommand": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/preDeployCommand",
                },
                "sidecars": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
                },
                "storage": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
                },
                "target": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/target",
                },
                "type": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/type",
                },
                "versionHistoryCount": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
                },
                "watchPaths": {
                  "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                },
              },
              "required": [
                "id",
                "name",
                "type",
                "cpu",
                "memory",
                "jobs",
                "buildType",
                "containerImage",
              ],
              "type": "object",
            },
          ],
        },
        {
          "anyOf": [
            {
              "additionalProperties": false,
              "properties": {
                "basePath": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                },
                "buildType": {
                  "const": "docker",
                  "type": "string",
                },
                "ci": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                },
                "dependsOn": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                },
                "dockerContext": {
                  "default": ".",
                  "type": "string",
                },
                "dockerLabels": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
                },
                "dockerfilePath": {
                  "default": "./Dockerfile",
                  "type": "string",
                },
                "envVariables": {
                  "$ref": "#/properties/envVariables",
                },
                "id": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                },
                "includeEnvVariablesInBuild": {
                  "default": true,
                  "type": "boolean",
                },
                "injectEnvVariablesInDockerfile": {
                  "default": true,
                  "type": "boolean",
                },
                "lambda": {
                  "anyOf": [
                    {
                      "additionalProperties": false,
                      "properties": {
                        "cpuArchitecture": {
                          "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture",
                        },
                        "fnUrl": {
                          "anyOf": [
                            {
                              "additionalProperties": false,
                              "properties": {
                                "authType": {
                                  "default": "None",
                                  "enum": [
                                    "None",
                                  ],
                                  "type": "string",
                                },
                                "cors": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "allowCredentials": {
                                      "default": false,
                                      "type": "boolean",
                                    },
                                    "allowHeaders": {
                                      "default": [],
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                    "allowMethods": {
                                      "default": [
                                        "*",
                                      ],
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                    "allowOrigin": {
                                      "default": [
                                        "*",
                                      ],
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                    "exposedHeaders": {
                                      "default": [],
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                    },
                                    "maxAge": {
                                      "default": 0,
                                      "maximum": 86400,
                                      "minimum": 0,
                                      "type": "number",
                                    },
                                  },
                                  "type": "object",
                                },
                                "enabled": {
                                  "const": true,
                                  "type": "boolean",
                                },
                                "invokeMode": {
                                  "default": "Buffered",
                                  "enum": [
                                    "Buffered",
                                    "ResponseStream",
                                  ],
                                  "type": "string",
                                },
                              },
                              "required": [
                                "enabled",
                              ],
                              "type": "object",
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "enabled": {
                                  "const": false,
                                  "type": "boolean",
                                },
                              },
                              "required": [
                                "enabled",
                              ],
                              "type": "object",
                            },
                          ],
                          "default": {
                            "enabled": false,
                          },
                        },
                        "memory": {
                          "default": 512,
                          "maximum": 10240,
                          "minimum": 128,
                          "type": "number",
                        },
                        "packageType": {
                          "const": "image",
                          "type": "string",
                        },
                        "reservedConcurrency": {
                          "description": "Sets max concurrency allocated to lambda across the region. Reduces total concurrency units.",
                          "maximum": 900,
                          "minimum": 0,
                          "type": "number",
                        },
                        "storage": {
                          "default": 512,
                          "maximum": 10240,
                          "minimum": 512,
                          "type": "integer",
                        },
                        "timeoutSecs": {
                          "default": 30,
                          "maximum": 900,
                          "minimum": 1,
                          "type": "number",
                        },
                        "tracing": {
                          "default": true,
                          "type": "boolean",
                        },
                        "vpc": {
                          "default": false,
                          "description": "Place lambda within environment vpc",
                          "type": "boolean",
                        },
                      },
                      "required": [
                        "packageType",
                      ],
                      "type": "object",
                    },
                    {
                      "additionalProperties": false,
                      "properties": {
                        "cpuArchitecture": {
                          "$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture",
                        },
                        "fnUrl": {
                          "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/fnUrl",
                        },
                        "handler": {
                          "type": "string",
                        },
                        "memory": {
                          "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/memory",
                        },
                        "packageType": {
                          "const": "zip",
                          "type": "string",
                        },
                        "reservedConcurrency": {
                          "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/reservedConcurrency",
                        },
                        "runtime": {
                          "enum": [
                            "nodejs20.x",
                            "nodejs22.x",
                            "java8.al2",
                            "java11",
                            "java17",
                            "java21",
                            "python3.9",
                            "python3.10",
                            "python3.11",
                            "python3.12",
                            "dotnet8",
                            "ruby3.2",
                            "ruby3.3",
                            "provided.al2",
                            "provided.al2023",
                          ],
                          "type": "string",
                        },
                        "storage": {
                          "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/storage",
                        },
                        "timeoutSecs": {
                          "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/timeoutSecs",
                        },
                        "tracing": {
                          "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/tracing",
                        },
                        "vpc": {
                          "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/vpc",
                        },
                      },
                      "required": [
                        "packageType",
                        "handler",
                        "runtime",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "name": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                },
                "outputDirectory": {
                  "description": "Output directory is required for zip lambda and unused for image lambda services",
                  "type": "string",
                },
                "type": {
                  "const": "lambda-function",
                  "type": "string",
                },
                "versionHistoryCount": {
                  "default": 10,
                  "maximum": 75,
                  "minimum": 1,
                  "type": "number",
                },
                "watchPaths": {
                  "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                },
              },
              "required": [
                "id",
                "name",
                "type",
                "lambda",
                "buildType",
              ],
              "type": "object",
            },
            {
              "additionalProperties": false,
              "properties": {
                "basePath": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                },
                "buildType": {
                  "const": "fromService",
                  "type": "string",
                },
                "ci": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                },
                "containerImage": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage/anyOf/1",
                },
                "dependsOn": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                },
                "envVariables": {
                  "$ref": "#/properties/envVariables",
                },
                "id": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                },
                "includeEnvVariablesInBuild": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/includeEnvVariablesInBuild",
                },
                "injectEnvVariablesInDockerfile": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/injectEnvVariablesInDockerfile",
                },
                "lambda": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda",
                },
                "name": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                },
                "type": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/type",
                },
                "versionHistoryCount": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/versionHistoryCount",
                },
                "watchPaths": {
                  "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                },
              },
              "required": [
                "id",
                "name",
                "type",
                "lambda",
                "buildType",
                "containerImage",
              ],
              "type": "object",
            },
            {
              "additionalProperties": false,
              "properties": {
                "basePath": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
                },
                "buildCommand": {
                  "type": "string",
                },
                "buildType": {
                  "const": "nixpacks",
                  "type": "string",
                },
                "ci": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
                },
                "dependsOn": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
                },
                "envVariables": {
                  "$ref": "#/properties/envVariables",
                },
                "id": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
                },
                "includeEnvVariablesInBuild": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/includeEnvVariablesInBuild",
                },
                "injectEnvVariablesInDockerfile": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/injectEnvVariablesInDockerfile",
                },
                "installCommand": {
                  "type": "string",
                },
                "lambda": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/1",
                },
                "name": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
                },
                "outputDirectory": {
                  "type": "string",
                },
                "postBuildCommand": {
                  "type": "string",
                },
                "type": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/type",
                },
                "versionHistoryCount": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/versionHistoryCount",
                },
                "watchPaths": {
                  "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
                },
              },
              "required": [
                "id",
                "name",
                "type",
                "lambda",
                "buildType",
                "outputDirectory",
              ],
              "type": "object",
            },
          ],
        },
        {
          "additionalProperties": false,
          "properties": {
            "blockAllPublicAccess": {
              "default": true,
              "type": "boolean",
            },
            "bucketNameBase": {
              "maxLength": 56,
              "minLength": 3,
              "pattern": "(?!(^xn--))^[a-z0-9][a-z0-9-]+$",
              "type": "string",
            },
            "bucketPolicy": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline",
            },
            "bucketVersioning": {
              "default": false,
              "type": "boolean",
            },
            "dependsOn": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
            },
            "id": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
            },
            "name": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
            },
            "type": {
              "const": "s3",
              "type": "string",
            },
          },
          "required": [
            "id",
            "name",
            "type",
            "bucketNameBase",
          ],
          "type": "object",
        },
        {
          "additionalProperties": false,
          "properties": {
            "autoscaling": {
              "additionalProperties": false,
              "properties": {
                "cooldownTimerSecs": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cooldownTimerSecs",
                },
                "cpuThreshold": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cpuThreshold",
                },
                "memoryThreshold": {
                  "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/memoryThreshold",
                },
              },
              "type": "object",
            },
            "basePath": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
            },
            "buildCommand": {
              "type": "string",
            },
            "buildType": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType",
            },
            "ci": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
            },
            "containerImage": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage",
            },
            "containerInsights": {
              "default": false,
              "type": "boolean",
            },
            "cpu": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
            },
            "dependsOn": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
            },
            "dockerContext": {
              "type": "string",
            },
            "dockerLabels": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
            },
            "dockerfilePath": {
              "type": "string",
            },
            "envVariables": {
              "$ref": "#/properties/envVariables",
            },
            "gpu": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
            },
            "id": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
            },
            "includeEnvVariablesInBuild": {
              "default": true,
              "type": "boolean",
            },
            "injectEnvVariablesInDockerfile": {
              "default": true,
              "type": "boolean",
            },
            "installCommand": {
              "type": "string",
            },
            "integrations": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
            },
            "logging": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
            },
            "maxInstances": {
              "default": 1,
              "minimum": 1,
              "type": "number",
            },
            "memory": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
            },
            "minInstances": {
              "default": 1,
              "minimum": 1,
              "type": "number",
            },
            "name": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
            },
            "permissions": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions",
            },
            "ports": {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "healthCheck": {
                        "additionalProperties": false,
                        "properties": {
                          "gracePeriodSecs": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "number",
                          },
                          "intervalSecs": {
                            "maximum": 300,
                            "minimum": 5,
                            "type": "number",
                          },
                          "tcpPort": {
                            "description": "This is the port that the load balancer will use to health check the service.",
                            "type": "number",
                          },
                          "timeoutSecs": {
                            "maximum": 120,
                            "minimum": 2,
                            "type": "number",
                          },
                        },
                        "required": [
                          "tcpPort",
                        ],
                        "type": "object",
                      },
                      "port": {
                        "type": "number",
                      },
                      "protocol": {
                        "const": "udp",
                        "type": "string",
                      },
                    },
                    "required": [
                      "port",
                      "protocol",
                      "healthCheck",
                    ],
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "healthCheck": {
                        "additionalProperties": false,
                        "properties": {
                          "gracePeriodSecs": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "number",
                          },
                          "intervalSecs": {
                            "maximum": 300,
                            "minimum": 5,
                            "type": "number",
                          },
                          "timeoutSecs": {
                            "maximum": 120,
                            "minimum": 2,
                            "type": "number",
                          },
                        },
                        "type": "object",
                      },
                      "port": {
                        "type": "number",
                      },
                      "protocol": {
                        "const": "tcp",
                        "type": "string",
                      },
                      "tls": {
                        "default": true,
                        "type": "boolean",
                      },
                    },
                    "required": [
                      "port",
                      "protocol",
                      "healthCheck",
                    ],
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "healthCheck": {
                        "additionalProperties": false,
                        "properties": {
                          "gracePeriodSecs": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "number",
                          },
                          "intervalSecs": {
                            "maximum": 300,
                            "minimum": 5,
                            "type": "number",
                          },
                          "path": {
                            "default": "/",
                            "type": "string",
                          },
                          "timeoutSecs": {
                            "maximum": 120,
                            "minimum": 2,
                            "type": "number",
                          },
                        },
                        "type": "object",
                      },
                      "port": {
                        "type": "number",
                      },
                      "protocol": {
                        "const": "http",
                        "type": "string",
                      },
                      "tls": {
                        "default": true,
                        "type": "boolean",
                      },
                    },
                    "required": [
                      "port",
                      "protocol",
                      "healthCheck",
                    ],
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "healthCheck": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/ports/items/anyOf/2/properties/healthCheck",
                      },
                      "port": {
                        "type": "number",
                      },
                      "protocol": {
                        "const": "http2",
                        "type": "string",
                      },
                      "tls": {
                        "default": true,
                        "type": "boolean",
                      },
                    },
                    "required": [
                      "port",
                      "protocol",
                      "healthCheck",
                    ],
                    "type": "object",
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "healthCheck": {
                        "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/ports/items/anyOf/1/properties/healthCheck",
                      },
                      "port": {
                        "type": "number",
                      },
                      "protocol": {
                        "const": "grpc",
                        "type": "string",
                      },
                      "tls": {
                        "default": true,
                        "type": "boolean",
                      },
                    },
                    "required": [
                      "port",
                      "protocol",
                      "healthCheck",
                    ],
                    "type": "object",
                  },
                ],
              },
              "minItems": 1,
              "type": "array",
            },
            "postBuildCommand": {
              "type": "string",
            },
            "postDeployCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
            },
            "preDeployCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
            },
            "privileged": {
              "default": false,
              "type": "boolean",
            },
            "sidecars": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
            },
            "startCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
            },
            "storage": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
            },
            "target": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target",
              "default": {
                "type": "fargate",
              },
            },
            "type": {
              "const": "network-server",
              "type": "string",
            },
            "versionHistoryCount": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
            },
            "watchPaths": {
              "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
            },
          },
          "required": [
            "id",
            "name",
            "cpu",
            "memory",
            "type",
            "ports",
          ],
          "type": "object",
        },
        {
          "additionalProperties": false,
          "properties": {
            "autoscaling": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/autoscaling",
            },
            "basePath": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath",
            },
            "buildCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/buildCommand",
            },
            "buildType": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType",
            },
            "ci": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci",
            },
            "containerImage": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/containerImage",
            },
            "containerInsights": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/containerInsights",
            },
            "cpu": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu",
            },
            "dependsOn": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn",
            },
            "dockerContext": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/dockerContext",
            },
            "dockerLabels": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
            },
            "dockerfilePath": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/dockerfilePath",
            },
            "envVariables": {
              "$ref": "#/properties/envVariables",
            },
            "gpu": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu",
            },
            "id": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id",
            },
            "includeEnvVariablesInBuild": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/includeEnvVariablesInBuild",
            },
            "injectEnvVariablesInDockerfile": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/injectEnvVariablesInDockerfile",
            },
            "installCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/installCommand",
            },
            "integrations": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations",
            },
            "logging": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging",
            },
            "maxInstances": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/maxInstances",
            },
            "memory": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory",
            },
            "minInstances": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/minInstances",
            },
            "name": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name",
            },
            "permissions": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/permissions",
            },
            "ports": {
              "items": {
                "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/ports/items",
              },
              "minItems": 1,
              "type": "array",
            },
            "postBuildCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/postBuildCommand",
            },
            "postDeployCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/postDeployCommand",
            },
            "preDeployCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/preDeployCommand",
            },
            "privileged": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/privileged",
            },
            "sidecars": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars",
            },
            "startCommand": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/startCommand",
            },
            "storage": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage",
            },
            "target": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/target",
            },
            "type": {
              "const": "private-network-server",
              "type": "string",
            },
            "versionHistoryCount": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount",
            },
            "watchPaths": {
              "$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths",
            },
          },
          "required": [
            "id",
            "name",
            "cpu",
            "memory",
            "type",
            "ports",
          ],
          "type": "object",
        },
      ],
    },
    "primaryKey": "id",
    "requiredFields":     
Set {
      "id",
      "name",
      "cpu",
      "memory",
      "type",
    }
,
    "strategy": "primaryKey",
  },
  "/environments/services/dependsOn" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/startCommand" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/preDeployCommand" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/postDeployCommand" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/watchPaths" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/sidecars" => {
    "compiledDiff": [Function],
    "hashFields": [
      "cpuAllotment",
      "memoryAllotment",
      "name",
      "image",
    ],
    "itemSchema": {
      "additionalProperties": false,
      "properties": {
        "cpuAllotment": {
          "minimum": 0,
          "type": "number",
        },
        "dockerLabels": {
          "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels",
        },
        "enableNetworking": {
          "default": true,
          "type": "boolean",
        },
        "envVariables": {
          "$ref": "#/properties/envVariables",
        },
        "essential": {
          "default": false,
          "type": "boolean",
        },
        "image": {
          "type": "string",
        },
        "logging": {
          "default": false,
          "type": "boolean",
        },
        "memoryAllotment": {
          "minimum": 0,
          "type": "number",
        },
        "name": {
          "type": "string",
        },
        "ports": {
          "items": {
            "type": "number",
          },
          "type": "array",
        },
        "startCommand": {
          "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand",
        },
      },
      "required": [
        "cpuAllotment",
        "memoryAllotment",
        "name",
        "image",
      ],
      "type": "object",
    },
    "primaryKey": "name",
    "requiredFields":     
Set {
      "cpuAllotment",
      "memoryAllotment",
      "name",
      "image",
    }
,
    "strategy": "primaryKey",
  },
  "/environments/services/sidecars/ports" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "number",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/sidecars/startCommand" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/logging/firelens/config" => {
    "compiledDiff": [Function],
    "hashFields": [
      "name",
      "match",
    ],
    "itemSchema": {
      "additionalProperties": false,
      "properties": {
        "match": {
          "type": "string",
        },
        "name": {
          "type": "string",
        },
        "options": {
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
            ],
          },
          "type": "object",
        },
      },
      "required": [
        "name",
        "match",
        "options",
      ],
      "type": "object",
    },
    "primaryKey": "name",
    "requiredFields":     
Set {
      "name",
      "match",
      "options",
    }
,
    "strategy": "primaryKey",
  },
  "/environments/services/logging/firelens/config/options/*" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/permissions/inline/*" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "anyOf": [
        {
          "type": [
            "string",
            "number",
            "boolean",
            "null",
          ],
        },
        {
          "items": {
            "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline/anyOf/0/additionalProperties",
          },
          "type": "array",
        },
        {
          "additionalProperties": {
            "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline/anyOf/0/additionalProperties",
          },
          "type": "object",
        },
      ],
    },
    "primaryKey": null,
    "strategy": "lcs",
  },
  "/environments/services/permissions/attach" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "pattern": "^arn",
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/jobs/*/startCommand" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/cpuArchitecture" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "enum": [
        "x86_64",
        "x86-64",
        "arm64",
        "amd64",
      ],
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/lambda/fnUrl/cors/allowHeaders" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/lambda/fnUrl/cors/allowMethods" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/lambda/fnUrl/cors/allowOrigin" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/lambda/fnUrl/cors/exposedHeaders" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/lambda/cpuArchitecture" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "enum": [
        "x86_64",
        "x86-64",
        "arm64",
        "amd64",
      ],
      "type": "string",
    },
    "primaryKey": null,
    "strategy": "unique",
  },
  "/environments/services/bucketPolicy/*" => {
    "compiledDiff": [Function],
    "itemSchema": {
      "anyOf": [
        {
          "type": [
            "string",
            "number",
            "boolean",
            "null",
          ],
        },
        {
          "items": {
            "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline/anyOf/0/additionalProperties",
          },
          "type": "array",
        },
        {
          "additionalProperties": {
            "$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline/anyOf/0/additionalProperties",
          },
          "type": "object",
        },
      ],
    },
    "primaryKey": null,
    "strategy": "lcs",
  },
  "/environments/services/ports" => {
    "compiledDiff": [Function],
    "hashFields": [
      "port",
      "protocol",
    ],
    "itemSchema": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "healthCheck": {
              "additionalProperties": false,
              "properties": {
                "gracePeriodSecs": {
                  "maximum": 2147483647,
                  "minimum": 0,
                  "type": "number",
                },
                "intervalSecs": {
                  "maximum": 300,
                  "minimum": 5,
                  "type": "number",
                },
                "tcpPort": {
                  "description": "This is the port that the load balancer will use to health check the service.",
                  "type": "number",
                },
                "timeoutSecs": {
                  "maximum": 120,
                  "minimum": 2,
                  "type": "number",
                },
              },
              "required": [
                "tcpPort",
              ],
              "type": "object",
            },
            "port": {
              "type": "number",
            },
            "protocol": {
              "const": "udp",
              "type": "string",
            },
          },
          "required": [
            "port",
            "protocol",
            "healthCheck",
          ],
          "type": "object",
        },
        {
          "additionalProperties": false,
          "properties": {
            "healthCheck": {
              "additionalProperties": false,
              "properties": {
                "gracePeriodSecs": {
                  "maximum": 2147483647,
                  "minimum": 0,
                  "type": "number",
                },
                "intervalSecs": {
                  "maximum": 300,
                  "minimum": 5,
                  "type": "number",
                },
                "timeoutSecs": {
                  "maximum": 120,
                  "minimum": 2,
                  "type": "number",
                },
              },
              "type": "object",
            },
            "port": {
              "type": "number",
            },
            "protocol": {
              "const": "tcp",
              "type": "string",
            },
            "tls": {
              "default": true,
              "type": "boolean",
            },
          },
          "required": [
            "port",
            "protocol",
            "healthCheck",
          ],
          "type": "object",
        },
        {
          "additionalProperties": false,
          "properties": {
            "healthCheck": {
              "additionalProperties": false,
              "properties": {
                "gracePeriodSecs": {
                  "maximum": 2147483647,
                  "minimum": 0,
                  "type": "number",
                },
                "intervalSecs": {
                  "maximum": 300,
                  "minimum": 5,
                  "type": "number",
                },
                "path": {
                  "default": "/",
                  "type": "string",
                },
                "timeoutSecs": {
                  "maximum": 120,
                  "minimum": 2,
                  "type": "number",
                },
              },
              "type": "object",
            },
            "port": {
              "type": "number",
            },
            "protocol": {
              "const": "http",
              "type": "string",
            },
            "tls": {
              "default": true,
              "type": "boolean",
            },
          },
          "required": [
            "port",
            "protocol",
            "healthCheck",
          ],
          "type": "object",
        },
        {
          "additionalProperties": false,
          "properties": {
            "healthCheck": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/ports/items/anyOf/2/properties/healthCheck",
            },
            "port": {
              "type": "number",
            },
            "protocol": {
              "const": "http2",
              "type": "string",
            },
            "tls": {
              "default": true,
              "type": "boolean",
            },
          },
          "required": [
            "port",
            "protocol",
            "healthCheck",
          ],
          "type": "object",
        },
        {
          "additionalProperties": false,
          "properties": {
            "healthCheck": {
              "$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/ports/items/anyOf/1/properties/healthCheck",
            },
            "port": {
              "type": "number",
            },
            "protocol": {
              "const": "grpc",
              "type": "string",
            },
            "tls": {
              "default": true,
              "type": "boolean",
            },
          },
          "required": [
            "port",
            "protocol",
            "healthCheck",
          ],
          "type": "object",
        },
      ],
    },
    "primaryKey": "port",
    "requiredFields":     
Set {
      "port",
      "protocol",
      "healthCheck",
    }
,
    "strategy": "primaryKey",
  },
}
`;
