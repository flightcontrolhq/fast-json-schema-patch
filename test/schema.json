{
	"type": "object",
	"properties": {
		"$schema": {
			"type": "string"
		},
		"envVariables": {
			"type": "object",
			"additionalProperties": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"type": "number"
					},
					{
						"type": "boolean"
					},
					{
						"type": "object",
						"properties": {
							"fromParameterStore": {
								"type": "string"
							}
						},
						"required": ["fromParameterStore"],
						"additionalProperties": false
					},
					{
						"type": "object",
						"properties": {
							"fromSecretsManager": {
								"type": "string"
							}
						},
						"required": ["fromSecretsManager"],
						"additionalProperties": false
					},
					{
						"type": "object",
						"properties": {
							"fromService": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"value": {
										"anyOf": [
											{
												"type": "string",
												"enum": [
													"dbConnectionString",
													"username",
													"password",
													"dbName",
													"port",
													"host",
													"origin",
													"loadBalancerHost",
													"loadBalancerOrigin",
													"authToken",
													"connectionString",
													"readerconnectionString",
													"readerHost",
													"readerPort",
													"bucketName"
												]
											},
											{
												"type": "string",
												"pattern": "^loadBalancerPort"
											}
										]
									}
								},
								"required": ["id", "value"],
								"additionalProperties": false
							}
						},
						"required": ["fromService"],
						"additionalProperties": false
					}
				]
			},
			"default": {}
		},
		"environments": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"minLength": 1,
						"maxLength": 191
					},
					"region": {
						"type": "string",
						"minLength": 1
					},
					"source": {
						"anyOf": [
							{
								"type": "object",
								"properties": {
									"pr": {
										"type": "boolean",
										"const": true
									},
									"trigger": {
										"type": "string",
										"enum": ["push", "manual"],
										"default": "push"
									},
									"filter": {
										"type": "object",
										"properties": {
											"labels": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"toBranches": {
												"anyOf": [
													{
														"type": "array",
														"items": {
															"type": "string"
														}
													},
													{
														"type": "array",
														"items": {
															"type": "null"
														}
													}
												]
											},
											"toBranch": {
												"anyOf": [
													{
														"type": "string"
													},
													{
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												]
											},
											"fromBranches": {
												"anyOf": [
													{
														"type": "array",
														"items": {
															"type": "string"
														}
													},
													{
														"type": "array",
														"items": {
															"type": "null"
														}
													}
												]
											},
											"watchPaths": {
												"type": "array",
												"items": {
													"type": "string"
												}
											}
										},
										"additionalProperties": false
									}
								},
								"required": ["pr"],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"pr": {
										"type": "boolean",
										"const": false,
										"default": false
									},
									"branch": {
										"type": "string"
									},
									"trigger": {
										"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/trigger"
									}
								},
								"required": ["branch"],
								"additionalProperties": false
							}
						]
					},
					"services": {
						"type": "array",
						"items": {
							"anyOf": [
								{
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"minLength": 1,
											"maxLength": 191
										},
										"name": {
											"type": "string",
											"minLength": 1,
											"maxLength": 191
										},
										"dependsOn": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"target": {
											"anyOf": [
												{
													"type": "object",
													"properties": {
														"type": {
															"type": "string",
															"const": "fargate"
														}
													},
													"required": ["type"],
													"additionalProperties": false
												},
												{
													"type": "object",
													"properties": {
														"type": {
															"type": "string",
															"const": "ecs-ec2"
														},
														"clusterInstanceSize": {
															"type": "string"
														},
														"clusterMinInstances": {
															"type": "number",
															"minimum": 1
														},
														"clusterMaxInstances": {
															"type": "number"
														}
													},
													"required": [
														"type",
														"clusterInstanceSize",
														"clusterMinInstances",
														"clusterMaxInstances"
													],
													"additionalProperties": false
												}
											],
											"default": {
												"type": "fargate"
											}
										},
										"buildType": {
											"type": "string",
											"enum": [
												"nodejs",
												"nixpacks",
												"docker",
												"fromService",
												"fromRepository"
											]
										},
										"containerImage": {
											"anyOf": [
												{
													"type": "object",
													"properties": {
														"registryId": {
															"type": "string",
															"minLength": 1
														},
														"tag": {
															"type": "string",
															"minLength": 1,
															"default": "latest"
														},
														"repository": {
															"type": "string",
															"minLength": 1
														}
													},
													"required": ["registryId", "repository"],
													"additionalProperties": false
												},
												{
													"type": "object",
													"properties": {
														"fromService": {
															"type": "string",
															"minLength": 1
														}
													},
													"required": ["fromService"],
													"additionalProperties": false
												}
											]
										},
										"cpu": {
											"type": "number",
											"minimum": 0.125
										},
										"gpu": {
											"type": "number",
											"minimum": 0,
											"maximum": 16
										},
										"memory": {
											"type": "number",
											"minimum": 0.125
										},
										"ci": {
											"anyOf": [
												{
													"type": "object",
													"properties": {
														"type": {
															"type": "string",
															"const": "codebuild"
														}
													},
													"required": ["type"],
													"additionalProperties": false
												},
												{
													"type": "object",
													"properties": {
														"type": {
															"type": "string",
															"const": "ec2"
														},
														"instanceSize": {
															"type": "string"
														},
														"instanceStorage": {
															"type": "number",
															"default": 30
														},
														"storageThroughput": {
															"type": "number",
															"default": 125
														},
														"storageIops": {
															"type": "number",
															"default": 3000
														},
														"storageType": {
															"type": "string",
															"enum": ["gp3", "gp2", "io1", "io2"],
															"default": "gp3"
														}
													},
													"required": ["type"],
													"additionalProperties": false
												}
											],
											"default": {
												"type": "codebuild"
											}
										},
										"containerInsights": {
											"type": "boolean",
											"default": false
										},
										"storage": {
											"type": "integer",
											"minimum": 20,
											"maximum": 200
										},
										"minInstances": {
											"type": "number",
											"minimum": 1,
											"default": 1
										},
										"maxInstances": {
											"type": "number",
											"minimum": 1,
											"default": 1
										},
										"versionHistoryCount": {
											"type": "number",
											"minimum": 1,
											"default": 10
										},
										"basePath": {
											"type": "string",
											"minLength": 1,
											"default": "."
										},
										"installCommand": {
											"type": "string"
										},
										"buildCommand": {
											"type": "string"
										},
										"startCommand": {
											"anyOf": [
												{
													"type": "string"
												},
												{
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											]
										},
										"preDeployCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand"
										},
										"postDeployCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand"
										},
										"postBuildCommand": {
											"type": "string"
										},
										"privileged": {
											"type": "boolean",
											"default": false
										},
										"dockerfilePath": {
											"type": "string"
										},
										"dockerContext": {
											"type": "string"
										},
										"injectEnvVariablesInDockerfile": {
											"type": "boolean",
											"default": true
										},
										"dockerLabels": {
											"type": "object",
											"additionalProperties": {
												"type": "string"
											}
										},
										"envVariables": {
											"$ref": "#/properties/envVariables"
										},
										"watchPaths": {
											"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
										},
										"autoscaling": {
											"type": "object",
											"properties": {
												"cpuThreshold": {
													"type": "number"
												},
												"memoryThreshold": {
													"type": "number"
												},
												"cooldownTimerSecs": {
													"type": "number"
												},
												"requestsPerTarget": {
													"type": "number"
												}
											},
											"additionalProperties": false
										},
										"integrations": {
											"type": "object",
											"properties": {
												"uploadSentrySourceMap": {
													"type": "boolean",
													"default": false
												}
											},
											"additionalProperties": false
										},
										"sidecars": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"cpuAllotment": {
														"type": "number",
														"minimum": 0
													},
													"memoryAllotment": {
														"type": "number",
														"minimum": 0
													},
													"name": {
														"type": "string"
													},
													"image": {
														"type": "string"
													},
													"envVariables": {
														"$ref": "#/properties/envVariables"
													},
													"enableNetworking": {
														"type": "boolean",
														"default": true
													},
													"ports": {
														"type": "array",
														"items": {
															"type": "number"
														}
													},
													"logging": {
														"type": "boolean",
														"default": false
													},
													"dockerLabels": {
														"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels"
													},
													"essential": {
														"type": "boolean",
														"default": false
													},
													"startCommand": {
														"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand"
													}
												},
												"required": [
													"cpuAllotment",
													"memoryAllotment",
													"name",
													"image"
												],
												"additionalProperties": false
											}
										},
										"includeEnvVariablesInBuild": {
											"type": "boolean",
											"default": true
										},
										"logging": {
											"type": "object",
											"properties": {
												"firelens": {
													"anyOf": [
														{
															"type": "object",
															"properties": {
																"configSource": {
																	"type": "string",
																	"const": "inline"
																},
																"config": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"name": {
																				"type": "string"
																			},
																			"match": {
																				"type": "string"
																			},
																			"options": {
																				"type": "object",
																				"additionalProperties": {
																					"anyOf": [
																						{
																							"type": "string"
																						},
																						{
																							"type": "number"
																						},
																						{
																							"type": "array",
																							"items": {
																								"type": "string"
																							}
																						}
																					]
																				}
																			}
																		},
																		"required": ["name", "match", "options"],
																		"additionalProperties": false
																	}
																}
															},
															"required": ["configSource", "config"],
															"additionalProperties": false
														},
														{
															"type": "object",
															"properties": {
																"configSource": {
																	"type": "string",
																	"const": "file"
																},
																"configFilePath": {
																	"type": "string"
																}
															},
															"required": ["configSource", "configFilePath"],
															"additionalProperties": false
														}
													]
												},
												"ecsLogsMetadataEnabled": {
													"type": "boolean",
													"default": false
												},
												"cloudwatchLogsRetentionDays": {
													"type": "number",
													"minimum": 1,
													"maximum": 3653
												},
												"cloudwatchLogsEnabled": {
													"type": "boolean",
													"default": true
												},
												"envVariables": {
													"$ref": "#/properties/envVariables"
												}
											},
											"additionalProperties": false
										},
										"permissions": {
											"type": "object",
											"properties": {
												"inline": {
													"anyOf": [
														{
															"type": "object",
															"additionalProperties": {
																"anyOf": [
																	{
																		"type": [
																			"string",
																			"number",
																			"boolean",
																			"null"
																		]
																	},
																	{
																		"type": "array",
																		"items": {
																			"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline/anyOf/0/additionalProperties"
																		}
																	},
																	{
																		"type": "object",
																		"additionalProperties": {
																			"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline/anyOf/0/additionalProperties"
																		}
																	}
																]
															}
														},
														{
															"type": "string"
														}
													]
												},
												"attach": {
													"type": "array",
													"items": {
														"type": "string",
														"pattern": "^arn"
													}
												}
											},
											"additionalProperties": false
										},
										"experimental": {
											"type": "object",
											"properties": {
												"runAsNonRootUser": {
													"type": "boolean",
													"default": false
												},
												"datadog": {
													"type": "object",
													"properties": {
														"enabled": {
															"type": "boolean"
														},
														"datadogSite": {
															"type": "string"
														},
														"datadogApiKey": {
															"type": "string"
														},
														"envVariables": {
															"$ref": "#/properties/envVariables"
														},
														"logging": {
															"type": "boolean",
															"default": false
														}
													},
													"required": [
														"enabled",
														"datadogSite",
														"datadogApiKey"
													],
													"additionalProperties": false
												},
												"healthCheckTimeout": {
													"type": "number",
													"minimum": 2,
													"maximum": 120
												},
												"healthCheckInterval": {
													"type": "number",
													"minimum": 5,
													"maximum": 300
												}
											},
											"additionalProperties": false
										},
										"cloudfrontAutoCacheInvalidation": {
											"type": "boolean",
											"default": true
										},
										"healthCheckTimeoutSecs": {
											"type": "number",
											"minimum": 2,
											"maximum": 120,
											"default": 5
										},
										"healthCheckIntervalSecs": {
											"type": "number",
											"minimum": 5,
											"maximum": 300,
											"default": 30
										},
										"healthCheckGracePeriodSecs": {
											"type": "number",
											"minimum": 0,
											"maximum": 2147483647
										},
										"healthCheckPath": {
											"type": "string",
											"pattern": "^\\/[!-~]*$",
											"default": "/"
										},
										"port": {
											"type": ["number", "string"],
											"default": 3000
										},
										"stickySessionsEnabled": {
											"type": "boolean",
											"default": false
										},
										"stickySessionsDurationSecs": {
											"type": "number",
											"default": 86400
										},
										"originShieldEnabled": {
											"type": "boolean",
											"default": true
										},
										"enableCloudfrontSwr": {
											"type": "boolean",
											"default": false
										},
										"type": {
											"type": "string",
											"const": "web"
										}
									},
									"required": ["id", "name", "cpu", "memory", "type"],
									"additionalProperties": false
								},
								{
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
										},
										"name": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
										},
										"dependsOn": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
										},
										"target": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target"
										},
										"buildType": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType"
										},
										"containerImage": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage"
										},
										"cpu": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu"
										},
										"gpu": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu"
										},
										"memory": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory"
										},
										"ci": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
										},
										"containerInsights": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerInsights"
										},
										"storage": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage"
										},
										"minInstances": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/minInstances"
										},
										"maxInstances": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/maxInstances"
										},
										"versionHistoryCount": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount"
										},
										"basePath": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
										},
										"installCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/installCommand"
										},
										"buildCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildCommand"
										},
										"startCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand"
										},
										"preDeployCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/preDeployCommand"
										},
										"postDeployCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postDeployCommand"
										},
										"postBuildCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postBuildCommand"
										},
										"privileged": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/privileged"
										},
										"dockerfilePath": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerfilePath"
										},
										"dockerContext": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerContext"
										},
										"injectEnvVariablesInDockerfile": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/injectEnvVariablesInDockerfile"
										},
										"dockerLabels": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels"
										},
										"envVariables": {
											"$ref": "#/properties/envVariables"
										},
										"watchPaths": {
											"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
										},
										"autoscaling": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling"
										},
										"integrations": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations"
										},
										"sidecars": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars"
										},
										"includeEnvVariablesInBuild": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/includeEnvVariablesInBuild"
										},
										"logging": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging"
										},
										"permissions": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions"
										},
										"experimental": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/experimental"
										},
										"cloudfrontAutoCacheInvalidation": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cloudfrontAutoCacheInvalidation"
										},
										"healthCheckTimeoutSecs": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckTimeoutSecs"
										},
										"healthCheckIntervalSecs": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckIntervalSecs"
										},
										"healthCheckGracePeriodSecs": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckGracePeriodSecs"
										},
										"healthCheckPath": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/healthCheckPath"
										},
										"port": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/port"
										},
										"stickySessionsEnabled": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/stickySessionsEnabled"
										},
										"stickySessionsDurationSecs": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/stickySessionsDurationSecs"
										},
										"originShieldEnabled": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/originShieldEnabled"
										},
										"type": {
											"type": "string",
											"const": "web-private"
										}
									},
									"required": ["id", "name", "cpu", "memory", "type"],
									"additionalProperties": false
								},
								{
									"anyOf": [
										{
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
												},
												"name": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
												},
												"dependsOn": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
												},
												"type": {
													"type": "string",
													"const": "rds"
												},
												"instanceSize": {
													"type": "string"
												},
												"private": {
													"type": "boolean",
													"default": false
												},
												"storage": {
													"type": "integer",
													"minimum": 20,
													"maximum": 65536
												},
												"maxStorage": {
													"type": "integer",
													"maximum": 65536,
													"default": 100
												},
												"autoUpgradeMinorVersions": {
													"type": "boolean",
													"default": true
												},
												"applyChangesImmediately": {
													"type": "boolean",
													"default": false
												},
												"deletionProtection": {
													"type": "boolean",
													"default": false
												},
												"connectionStringEnvVarName": {
													"type": "string",
													"pattern": "^\\w+$"
												},
												"backupRetentionPeriodInDays": {
													"type": "number",
													"minimum": 0,
													"maximum": 35,
													"default": 35
												},
												"deleteBackupsWithRdsDeletion": {
													"type": "boolean",
													"default": true
												},
												"performanceInsights": {
													"type": "boolean",
													"default": false
												},
												"storageType": {
													"type": "string",
													"enum": ["gp3", "gp2", "io1", "io2"],
													"default": "gp2"
												},
												"storageProvisionedIops": {
													"type": "number",
													"minimum": 1000
												},
												"multiAvailabilityZones": {
													"type": "boolean",
													"default": false
												},
												"encryptionAtRest": {
													"type": "boolean",
													"default": false
												},
												"engine": {
													"type": "string",
													"const": "mysql"
												},
												"engineVersion": {
													"type": "string",
													"enum": ["5.6", "5.7", "8.0", "8"]
												},
												"port": {
													"type": "number"
												}
											},
											"required": [
												"id",
												"name",
												"type",
												"instanceSize",
												"storage",
												"engine",
												"engineVersion"
											],
											"additionalProperties": false
										},
										{
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
												},
												"name": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
												},
												"dependsOn": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
												},
												"type": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/type"
												},
												"instanceSize": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/instanceSize"
												},
												"private": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/private"
												},
												"storage": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storage"
												},
												"maxStorage": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/maxStorage"
												},
												"autoUpgradeMinorVersions": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/autoUpgradeMinorVersions"
												},
												"applyChangesImmediately": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/applyChangesImmediately"
												},
												"deletionProtection": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deletionProtection"
												},
												"connectionStringEnvVarName": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/connectionStringEnvVarName"
												},
												"backupRetentionPeriodInDays": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/backupRetentionPeriodInDays"
												},
												"deleteBackupsWithRdsDeletion": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deleteBackupsWithRdsDeletion"
												},
												"performanceInsights": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/performanceInsights"
												},
												"storageType": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageType"
												},
												"storageProvisionedIops": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageProvisionedIops"
												},
												"multiAvailabilityZones": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/multiAvailabilityZones"
												},
												"encryptionAtRest": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/encryptionAtRest"
												},
												"engine": {
													"type": "string",
													"const": "postgres"
												},
												"engineVersion": {
													"type": "string",
													"enum": [
														"9",
														"10",
														"11",
														"12",
														"13",
														"14",
														"15",
														"16",
														"17"
													]
												},
												"port": {
													"type": "number"
												}
											},
											"required": [
												"id",
												"name",
												"type",
												"instanceSize",
												"storage",
												"engine",
												"engineVersion"
											],
											"additionalProperties": false
										},
										{
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
												},
												"name": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
												},
												"dependsOn": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
												},
												"type": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/type"
												},
												"instanceSize": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/instanceSize"
												},
												"private": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/private"
												},
												"storage": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storage"
												},
												"maxStorage": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/maxStorage"
												},
												"autoUpgradeMinorVersions": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/autoUpgradeMinorVersions"
												},
												"applyChangesImmediately": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/applyChangesImmediately"
												},
												"deletionProtection": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deletionProtection"
												},
												"connectionStringEnvVarName": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/connectionStringEnvVarName"
												},
												"backupRetentionPeriodInDays": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/backupRetentionPeriodInDays"
												},
												"deleteBackupsWithRdsDeletion": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/deleteBackupsWithRdsDeletion"
												},
												"performanceInsights": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/performanceInsights"
												},
												"storageType": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageType"
												},
												"storageProvisionedIops": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/storageProvisionedIops"
												},
												"multiAvailabilityZones": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/multiAvailabilityZones"
												},
												"encryptionAtRest": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/2/anyOf/0/properties/encryptionAtRest"
												},
												"engine": {
													"type": "string",
													"const": "mariadb"
												},
												"engineVersion": {
													"type": "string",
													"enum": ["10.2", "10.3", "10.4", "10.5", "10.6"]
												},
												"port": {
													"type": "number"
												}
											},
											"required": [
												"id",
												"name",
												"type",
												"instanceSize",
												"storage",
												"engine",
												"engineVersion"
											],
											"additionalProperties": false
										}
									]
								},
								{
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
										},
										"name": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
										},
										"dependsOn": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
										},
										"buildType": {
											"type": "string",
											"enum": ["nodejs", "nixpacks", "docker"]
										},
										"watchPaths": {
											"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
										},
										"type": {
											"type": "string",
											"const": "static"
										},
										"ci": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
										},
										"envVariables": {
											"$ref": "#/properties/envVariables"
										},
										"basePath": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
										},
										"integrations": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations"
										},
										"versionHistoryCount": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount"
										},
										"installCommand": {
											"type": "string"
										},
										"buildCommand": {
											"type": "string"
										},
										"postBuildCommand": {
											"type": "string"
										},
										"outputDirectory": {
											"type": "string",
											"default": "public"
										},
										"singlePageApp": {
											"type": "boolean",
											"default": false
										},
										"dockerfilePath": {
											"type": "string"
										},
										"dockerContext": {
											"type": "string"
										},
										"cloudfrontAutoCacheInvalidation": {
											"type": "boolean",
											"default": true
										},
										"originShieldEnabled": {
											"type": "boolean",
											"default": true
										}
									},
									"required": ["id", "name", "type"],
									"additionalProperties": false
								},
								{
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
										},
										"name": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
										},
										"dependsOn": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
										},
										"target": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target"
										},
										"buildType": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType"
										},
										"containerImage": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage"
										},
										"cpu": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu"
										},
										"gpu": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu"
										},
										"memory": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory"
										},
										"ci": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
										},
										"containerInsights": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerInsights"
										},
										"storage": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage"
										},
										"minInstances": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/minInstances"
										},
										"maxInstances": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/maxInstances"
										},
										"versionHistoryCount": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount"
										},
										"basePath": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
										},
										"installCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/installCommand"
										},
										"buildCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildCommand"
										},
										"startCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand"
										},
										"preDeployCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/preDeployCommand"
										},
										"postDeployCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postDeployCommand"
										},
										"postBuildCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/postBuildCommand"
										},
										"privileged": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/privileged"
										},
										"dockerfilePath": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerfilePath"
										},
										"dockerContext": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerContext"
										},
										"injectEnvVariablesInDockerfile": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/injectEnvVariablesInDockerfile"
										},
										"dockerLabels": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels"
										},
										"envVariables": {
											"$ref": "#/properties/envVariables"
										},
										"watchPaths": {
											"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
										},
										"autoscaling": {
											"type": "object",
											"properties": {
												"cpuThreshold": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cpuThreshold"
												},
												"memoryThreshold": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/memoryThreshold"
												},
												"cooldownTimerSecs": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cooldownTimerSecs"
												}
											},
											"additionalProperties": false
										},
										"integrations": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations"
										},
										"sidecars": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars"
										},
										"includeEnvVariablesInBuild": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/includeEnvVariablesInBuild"
										},
										"logging": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging"
										},
										"permissions": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions"
										},
										"experimental": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/experimental"
										},
										"cloudfrontAutoCacheInvalidation": {
											"type": "boolean",
											"default": true
										},
										"type": {
											"type": "string",
											"const": "worker"
										}
									},
									"required": ["id", "name", "cpu", "memory", "type"],
									"additionalProperties": false
								},
								{
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
										},
										"name": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
										},
										"dependsOn": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
										},
										"type": {
											"type": "string",
											"const": "elasticache"
										},
										"engine": {
											"type": "string",
											"const": "redis",
											"description": "The cache engine to be created in AWS Elasticache"
										},
										"clusterMode": {
											"type": "boolean",
											"const": false,
											"default": false,
											"description": "Defaults to false as it is not supported yet"
										},
										"instanceSize": {
											"type": "string",
											"enum": [
												"cache.t4g.micro",
												"cache.t3.micro",
												"cache.t4g.small",
												"cache.t3.small",
												"cache.t4g.medium",
												"cache.t3.medium",
												"cache.m7g.large",
												"cache.m6g.large",
												"cache.r7g.large",
												"cache.r6g.large",
												"cache.r5.large",
												"cache.c7gn.large",
												"cache.m7g.xlarge",
												"cache.m6g.xlarge",
												"cache.m5.xlarge",
												"cache.r7g.xlarge",
												"cache.r6g.xlarge",
												"cache.r5.xlarge",
												"cache.c7gn.xlarge",
												"cache.m7g.2xlarge",
												"cache.m6g.2xlarge",
												"cache.m5.2xlarge",
												"cache.r7g.2xlarge",
												"cache.r6gd.xlarge",
												"cache.r6g.2xlarge",
												"cache.r5.2xlarge",
												"cache.c7gn.2xlarge",
												"cache.m7g.4xlarge",
												"cache.m6g.4xlarge",
												"cache.m5.4xlarge",
												"cache.r6gd.2xlarge",
												"cache.r7g.4xlarge",
												"cache.r6g.4xlarge",
												"cache.r6gd.4xlarge",
												"cache.r5.4xlarge",
												"cache.c7gn.4xlarge",
												"cache.m7g.8xlarge",
												"cache.m6g.8xlarge",
												"cache.r6gd.8xlarge",
												"cache.r7g.8xlarge",
												"cache.r6g.8xlarge",
												"cache.c7gn.8xlarge",
												"cache.m7g.12xlarge",
												"cache.m6g.12xlarge",
												"cache.m5.12xlarge",
												"cache.r7g.12xlarge",
												"cache.m6g.16xlarge",
												"cache.r6g.12xlarge",
												"cache.r5.12xlarge",
												"cache.c7gn.12xlarge",
												"cache.r6g.16xlarge",
												"cache.m5.24xlarge",
												"cache.r6gd.12xlarge",
												"cache.r5.24xlarge",
												"cache.r7g.16xlarge",
												"cache.r6gd.16xlarge",
												"cache.m7g.16xlarge",
												"cache.c7gn.16xlarge",
												"cache.m3.2xlarge",
												"cache.m4.xlarge",
												"cache.r4.xlarge",
												"cache.r3.large",
												"cache.m4.2xlarge",
												"cache.r3.xlarge",
												"cache.m4.large",
												"cache.r4.8xlarge",
												"cache.r4.16xlarge",
												"cache.r4.4xlarge",
												"cache.m4.4xlarge",
												"cache.m1.medium",
												"cache.m1.xlarge",
												"cache.t1.micro",
												"cache.m2.2xlarge",
												"cache.m4.10xlarge",
												"cache.t2.medium",
												"cache.m3.large",
												"cache.t2.small",
												"cache.t2.micro",
												"cache.m2.xlarge",
												"cache.r3.8xlarge",
												"cache.m3.medium",
												"cache.r4.2xlarge",
												"cache.m2.4xlarge",
												"cache.r3.4xlarge",
												"cache.m3.xlarge",
												"cache.m1.large",
												"cache.r3.2xlarge",
												"cache.r4.large",
												"cache.c1.xlarge",
												"cache.m1.small"
											],
											"description": "The AWS instance size"
										},
										"connectionStringEnvVarName": {
											"type": "string",
											"pattern": "^\\w+$",
											"description": "The name of the environment variable that will contain the connecting string URL and that will be available to all other services in the same environment."
										},
										"applyChangesImmediately": {
											"type": "boolean",
											"default": false,
											"description": "Not applicable at the moment. If there are changes that can be applied, and this is set to TRUE, they will be applied immediately (with downtime) instead of during next maintenance window. Applicable when changes are made."
										},
										"autoMinorVersionUpgrade": {
											"type": "boolean",
											"default": true
										},
										"port": {
											"type": "number",
											"default": 6379
										},
										"encryptionAtRest": {
											"type": "boolean",
											"default": true
										},
										"engineVersion": {
											"type": "string",
											"enum": [
												"7.1",
												"7.0",
												"6.2",
												"6.0",
												"5.0.6",
												"5.0.5",
												"5.0.4",
												"5.0.3",
												"5.0.0",
												"4.0.10",
												"3.2.10",
												"3.2.6",
												"3.2.4",
												"2.8.24",
												"2.8.23",
												"2.8.22",
												"2.8.21",
												"2.8.19",
												"2.8.6",
												"2.6.13"
											]
										},
										"evictionPolicy": {
											"type": "string",
											"enum": [
												"volatile-lru",
												"allkeys-lru",
												"volatile-lfu",
												"allkeys-lfu",
												"volatile-random",
												"allkeys-random",
												"volatile-ttl",
												"noeviction"
											],
											"default": "volatile-lru"
										},
										"numberOfReplicas": {
											"type": "number",
											"default": 1,
											"description": "The number of replicas you want in your Redis service"
										}
									},
									"required": [
										"id",
										"name",
										"type",
										"engine",
										"instanceSize",
										"engineVersion"
									],
									"additionalProperties": false
								},
								{
									"anyOf": [
										{
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
												},
												"name": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
												},
												"dependsOn": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
												},
												"type": {
													"type": "string",
													"const": "scheduler"
												},
												"target": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target",
													"default": {
														"type": "fargate"
													}
												},
												"containerInsights": {
													"type": "boolean",
													"default": false
												},
												"versionHistoryCount": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount"
												},
												"basePath": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
												},
												"preDeployCommand": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand"
												},
												"postDeployCommand": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand"
												},
												"dockerLabels": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels"
												},
												"envVariables": {
													"$ref": "#/properties/envVariables"
												},
												"watchPaths": {
													"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
												},
												"storage": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage"
												},
												"cpu": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu"
												},
												"memory": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory"
												},
												"gpu": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu"
												},
												"sidecars": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars"
												},
												"integrations": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations"
												},
												"includeEnvVariablesInBuild": {
													"type": "boolean",
													"default": true
												},
												"injectEnvVariablesInDockerfile": {
													"type": "boolean",
													"default": true
												},
												"jobs": {
													"type": "object",
													"additionalProperties": {
														"type": "object",
														"properties": {
															"startCommand": {
																"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand"
															},
															"schedule": {
																"type": "string"
															},
															"timezone": {
																"type": "string"
															},
															"timeout": {
																"type": "number",
																"minimum": 1,
																"maximum": 1440,
																"default": 480,
																"description": "Timeout in minutes"
															},
															"cpu": {
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"not": {}
																			},
																			{
																				"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu"
																			}
																		]
																	},
																	{
																		"type": "null"
																	}
																]
															},
															"memory": {
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"not": {}
																			},
																			{
																				"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory"
																			}
																		]
																	},
																	{
																		"type": "null"
																	}
																]
															},
															"gpu": {
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"not": {}
																			},
																			{
																				"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu"
																			}
																		]
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"required": ["startCommand", "schedule"],
														"additionalProperties": false
													}
												},
												"cpuArchitecture": {
													"anyOf": [
														{
															"type": "string",
															"enum": ["x86_64", "x86-64", "arm64", "amd64"]
														},
														{
															"type": "array",
															"items": {
																"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture/anyOf/0"
															}
														}
													],
													"default": "x86_64"
												},
												"ci": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
												},
												"logging": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging"
												},
												"permissions": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions"
												},
												"experimental": {
													"type": "object",
													"properties": {
														"runAsNonRootUser": {
															"type": "boolean",
															"default": false
														}
													},
													"additionalProperties": false
												},
												"buildType": {
													"type": "string",
													"const": "nixpacks"
												},
												"buildCommand": {
													"type": "string"
												},
												"installCommand": {
													"type": "string"
												},
												"postBuildCommand": {
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"type",
												"cpu",
												"memory",
												"jobs",
												"buildType"
											],
											"additionalProperties": false
										},
										{
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
												},
												"name": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
												},
												"dependsOn": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
												},
												"type": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/type"
												},
												"target": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/target"
												},
												"containerInsights": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/containerInsights"
												},
												"versionHistoryCount": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount"
												},
												"basePath": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
												},
												"preDeployCommand": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/preDeployCommand"
												},
												"postDeployCommand": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/postDeployCommand"
												},
												"dockerLabels": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels"
												},
												"envVariables": {
													"$ref": "#/properties/envVariables"
												},
												"watchPaths": {
													"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
												},
												"storage": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage"
												},
												"cpu": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu"
												},
												"memory": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory"
												},
												"gpu": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu"
												},
												"sidecars": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars"
												},
												"integrations": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations"
												},
												"includeEnvVariablesInBuild": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/includeEnvVariablesInBuild"
												},
												"injectEnvVariablesInDockerfile": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/injectEnvVariablesInDockerfile"
												},
												"jobs": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/jobs"
												},
												"cpuArchitecture": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture"
												},
												"ci": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
												},
												"logging": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging"
												},
												"permissions": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/permissions"
												},
												"experimental": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/experimental"
												},
												"buildType": {
													"type": "string",
													"const": "fromService"
												},
												"containerImage": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage/anyOf/1"
												}
											},
											"required": [
												"id",
												"name",
												"type",
												"cpu",
												"memory",
												"jobs",
												"buildType",
												"containerImage"
											],
											"additionalProperties": false
										},
										{
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
												},
												"name": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
												},
												"dependsOn": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
												},
												"type": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/type"
												},
												"target": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/target"
												},
												"containerInsights": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/containerInsights"
												},
												"versionHistoryCount": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount"
												},
												"basePath": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
												},
												"preDeployCommand": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/preDeployCommand"
												},
												"postDeployCommand": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/postDeployCommand"
												},
												"dockerLabels": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels"
												},
												"envVariables": {
													"$ref": "#/properties/envVariables"
												},
												"watchPaths": {
													"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
												},
												"storage": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage"
												},
												"cpu": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu"
												},
												"memory": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory"
												},
												"gpu": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu"
												},
												"sidecars": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars"
												},
												"integrations": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations"
												},
												"includeEnvVariablesInBuild": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/includeEnvVariablesInBuild"
												},
												"injectEnvVariablesInDockerfile": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/injectEnvVariablesInDockerfile"
												},
												"jobs": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/jobs"
												},
												"cpuArchitecture": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture"
												},
												"ci": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
												},
												"logging": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging"
												},
												"permissions": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/permissions"
												},
												"experimental": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/experimental"
												},
												"buildType": {
													"type": "string",
													"const": "docker"
												},
												"dockerfilePath": {
													"type": "string"
												},
												"dockerContext": {
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"type",
												"cpu",
												"memory",
												"jobs",
												"buildType"
											],
											"additionalProperties": false
										},
										{
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
												},
												"name": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
												},
												"dependsOn": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
												},
												"type": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/type"
												},
												"target": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/target"
												},
												"containerInsights": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/containerInsights"
												},
												"versionHistoryCount": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount"
												},
												"basePath": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
												},
												"preDeployCommand": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/preDeployCommand"
												},
												"postDeployCommand": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/postDeployCommand"
												},
												"dockerLabels": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels"
												},
												"envVariables": {
													"$ref": "#/properties/envVariables"
												},
												"watchPaths": {
													"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
												},
												"storage": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage"
												},
												"cpu": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu"
												},
												"memory": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory"
												},
												"gpu": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu"
												},
												"sidecars": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars"
												},
												"integrations": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations"
												},
												"includeEnvVariablesInBuild": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/includeEnvVariablesInBuild"
												},
												"injectEnvVariablesInDockerfile": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/injectEnvVariablesInDockerfile"
												},
												"jobs": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/jobs"
												},
												"cpuArchitecture": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture"
												},
												"ci": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
												},
												"logging": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging"
												},
												"permissions": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/permissions"
												},
												"experimental": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/experimental"
												},
												"buildType": {
													"type": "string",
													"const": "fromRepository"
												},
												"containerImage": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage/anyOf/0"
												}
											},
											"required": [
												"id",
												"name",
												"type",
												"cpu",
												"memory",
												"jobs",
												"buildType",
												"containerImage"
											],
											"additionalProperties": false
										}
									]
								},
								{
									"anyOf": [
										{
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
												},
												"name": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
												},
												"dependsOn": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
												},
												"type": {
													"type": "string",
													"const": "lambda-function"
												},
												"basePath": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
												},
												"envVariables": {
													"$ref": "#/properties/envVariables"
												},
												"watchPaths": {
													"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
												},
												"includeEnvVariablesInBuild": {
													"type": "boolean",
													"default": true
												},
												"injectEnvVariablesInDockerfile": {
													"type": "boolean",
													"default": true
												},
												"ci": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
												},
												"versionHistoryCount": {
													"type": "number",
													"minimum": 1,
													"maximum": 75,
													"default": 10
												},
												"lambda": {
													"anyOf": [
														{
															"type": "object",
															"properties": {
																"memory": {
																	"type": "number",
																	"minimum": 128,
																	"maximum": 10240,
																	"default": 512
																},
																"storage": {
																	"type": "integer",
																	"minimum": 512,
																	"maximum": 10240,
																	"default": 512
																},
																"fnUrl": {
																	"anyOf": [
																		{
																			"type": "object",
																			"properties": {
																				"enabled": {
																					"type": "boolean",
																					"const": true
																				},
																				"invokeMode": {
																					"type": "string",
																					"enum": [
																						"Buffered",
																						"ResponseStream"
																					],
																					"default": "Buffered"
																				},
																				"authType": {
																					"type": "string",
																					"enum": ["None"],
																					"default": "None"
																				},
																				"cors": {
																					"type": "object",
																					"properties": {
																						"allowCredentials": {
																							"type": "boolean",
																							"default": false
																						},
																						"allowHeaders": {
																							"type": "array",
																							"items": {
																								"type": "string"
																							},
																							"default": []
																						},
																						"allowMethods": {
																							"type": "array",
																							"items": {
																								"type": "string"
																							},
																							"default": ["*"]
																						},
																						"allowOrigin": {
																							"type": "array",
																							"items": {
																								"type": "string"
																							},
																							"default": ["*"]
																						},
																						"maxAge": {
																							"type": "number",
																							"minimum": 0,
																							"maximum": 86400,
																							"default": 0
																						},
																						"exposedHeaders": {
																							"type": "array",
																							"items": {
																								"type": "string"
																							},
																							"default": []
																						}
																					},
																					"additionalProperties": false
																				}
																			},
																			"required": ["enabled"],
																			"additionalProperties": false
																		},
																		{
																			"type": "object",
																			"properties": {
																				"enabled": {
																					"type": "boolean",
																					"const": false
																				}
																			},
																			"required": ["enabled"],
																			"additionalProperties": false
																		}
																	],
																	"default": {
																		"enabled": false
																	}
																},
																"timeoutSecs": {
																	"type": "number",
																	"minimum": 1,
																	"maximum": 900,
																	"default": 30
																},
																"cpuArchitecture": {
																	"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture"
																},
																"tracing": {
																	"type": "boolean",
																	"default": true
																},
																"vpc": {
																	"type": "boolean",
																	"default": false,
																	"description": "Place lambda within environment vpc"
																},
																"reservedConcurrency": {
																	"type": "number",
																	"minimum": 0,
																	"maximum": 900,
																	"description": "Sets max concurrency allocated to lambda across the region. Reduces total concurrency units."
																},
																"packageType": {
																	"type": "string",
																	"const": "image"
																}
															},
															"required": ["packageType"],
															"additionalProperties": false
														},
														{
															"type": "object",
															"properties": {
																"memory": {
																	"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/memory"
																},
																"storage": {
																	"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/storage"
																},
																"fnUrl": {
																	"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/fnUrl"
																},
																"timeoutSecs": {
																	"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/timeoutSecs"
																},
																"cpuArchitecture": {
																	"$ref": "#/properties/environments/items/properties/services/items/anyOf/6/anyOf/0/properties/cpuArchitecture"
																},
																"tracing": {
																	"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/tracing"
																},
																"vpc": {
																	"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/vpc"
																},
																"reservedConcurrency": {
																	"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/0/properties/reservedConcurrency"
																},
																"packageType": {
																	"type": "string",
																	"const": "zip"
																},
																"handler": {
																	"type": "string"
																},
																"runtime": {
																	"type": "string",
																	"enum": [
																		"nodejs20.x",
																		"nodejs22.x",
																		"java8.al2",
																		"java11",
																		"java17",
																		"java21",
																		"python3.9",
																		"python3.10",
																		"python3.11",
																		"python3.12",
																		"dotnet8",
																		"ruby3.2",
																		"ruby3.3",
																		"provided.al2",
																		"provided.al2023"
																	]
																}
															},
															"required": ["packageType", "handler", "runtime"],
															"additionalProperties": false
														}
													]
												},
												"buildType": {
													"type": "string",
													"const": "docker"
												},
												"dockerfilePath": {
													"type": "string",
													"default": "./Dockerfile"
												},
												"dockerContext": {
													"type": "string",
													"default": "."
												},
												"outputDirectory": {
													"type": "string",
													"description": "Output directory is required for zip lambda and unused for image lambda services"
												},
												"dockerLabels": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels"
												}
											},
											"required": ["id", "name", "type", "lambda", "buildType"],
											"additionalProperties": false
										},
										{
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
												},
												"name": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
												},
												"dependsOn": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
												},
												"type": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/type"
												},
												"basePath": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
												},
												"envVariables": {
													"$ref": "#/properties/envVariables"
												},
												"watchPaths": {
													"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
												},
												"includeEnvVariablesInBuild": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/includeEnvVariablesInBuild"
												},
												"injectEnvVariablesInDockerfile": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/injectEnvVariablesInDockerfile"
												},
												"ci": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
												},
												"versionHistoryCount": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/versionHistoryCount"
												},
												"lambda": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda"
												},
												"buildType": {
													"type": "string",
													"const": "fromService"
												},
												"containerImage": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage/anyOf/1"
												}
											},
											"required": [
												"id",
												"name",
												"type",
												"lambda",
												"buildType",
												"containerImage"
											],
											"additionalProperties": false
										},
										{
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
												},
												"name": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
												},
												"dependsOn": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
												},
												"type": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/type"
												},
												"basePath": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
												},
												"envVariables": {
													"$ref": "#/properties/envVariables"
												},
												"watchPaths": {
													"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
												},
												"includeEnvVariablesInBuild": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/includeEnvVariablesInBuild"
												},
												"injectEnvVariablesInDockerfile": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/injectEnvVariablesInDockerfile"
												},
												"ci": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
												},
												"versionHistoryCount": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/versionHistoryCount"
												},
												"lambda": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/7/anyOf/0/properties/lambda/anyOf/1"
												},
												"buildType": {
													"type": "string",
													"const": "nixpacks"
												},
												"buildCommand": {
													"type": "string"
												},
												"installCommand": {
													"type": "string"
												},
												"postBuildCommand": {
													"type": "string"
												},
												"outputDirectory": {
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"type",
												"lambda",
												"buildType",
												"outputDirectory"
											],
											"additionalProperties": false
										}
									]
								},
								{
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
										},
										"name": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
										},
										"dependsOn": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
										},
										"type": {
											"type": "string",
											"const": "s3"
										},
										"bucketNameBase": {
											"type": "string",
											"minLength": 3,
											"maxLength": 56,
											"pattern": "(?!(^xn--))^[a-z0-9][a-z0-9-]+$"
										},
										"bucketVersioning": {
											"type": "boolean",
											"default": false
										},
										"bucketPolicy": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions/properties/inline"
										},
										"blockAllPublicAccess": {
											"type": "boolean",
											"default": true
										}
									},
									"required": ["id", "name", "type", "bucketNameBase"],
									"additionalProperties": false
								},
								{
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
										},
										"name": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
										},
										"dependsOn": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
										},
										"target": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/target",
											"default": {
												"type": "fargate"
											}
										},
										"buildType": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType"
										},
										"containerImage": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/containerImage"
										},
										"cpu": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu"
										},
										"gpu": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu"
										},
										"memory": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory"
										},
										"ci": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
										},
										"containerInsights": {
											"type": "boolean",
											"default": false
										},
										"storage": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage"
										},
										"minInstances": {
											"type": "number",
											"minimum": 1,
											"default": 1
										},
										"maxInstances": {
											"type": "number",
											"minimum": 1,
											"default": 1
										},
										"versionHistoryCount": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount"
										},
										"basePath": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
										},
										"installCommand": {
											"type": "string"
										},
										"buildCommand": {
											"type": "string"
										},
										"startCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand"
										},
										"preDeployCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand"
										},
										"postDeployCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/startCommand"
										},
										"postBuildCommand": {
											"type": "string"
										},
										"privileged": {
											"type": "boolean",
											"default": false
										},
										"dockerfilePath": {
											"type": "string"
										},
										"dockerContext": {
											"type": "string"
										},
										"injectEnvVariablesInDockerfile": {
											"type": "boolean",
											"default": true
										},
										"dockerLabels": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels"
										},
										"envVariables": {
											"$ref": "#/properties/envVariables"
										},
										"watchPaths": {
											"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
										},
										"autoscaling": {
											"type": "object",
											"properties": {
												"cpuThreshold": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cpuThreshold"
												},
												"memoryThreshold": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/memoryThreshold"
												},
												"cooldownTimerSecs": {
													"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/autoscaling/properties/cooldownTimerSecs"
												}
											},
											"additionalProperties": false
										},
										"integrations": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations"
										},
										"sidecars": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars"
										},
										"includeEnvVariablesInBuild": {
											"type": "boolean",
											"default": true
										},
										"logging": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging"
										},
										"permissions": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/permissions"
										},
										"type": {
											"type": "string",
											"const": "network-server"
										},
										"ports": {
											"type": "array",
											"items": {
												"anyOf": [
													{
														"type": "object",
														"properties": {
															"port": {
																"type": "number"
															},
															"protocol": {
																"type": "string",
																"const": "udp"
															},
															"healthCheck": {
																"type": "object",
																"properties": {
																	"timeoutSecs": {
																		"type": "number",
																		"minimum": 2,
																		"maximum": 120
																	},
																	"intervalSecs": {
																		"type": "number",
																		"minimum": 5,
																		"maximum": 300
																	},
																	"gracePeriodSecs": {
																		"type": "number",
																		"minimum": 0,
																		"maximum": 2147483647
																	},
																	"tcpPort": {
																		"type": "number",
																		"description": "This is the port that the load balancer will use to health check the service."
																	}
																},
																"required": ["tcpPort"],
																"additionalProperties": false
															}
														},
														"required": ["port", "protocol", "healthCheck"],
														"additionalProperties": false
													},
													{
														"type": "object",
														"properties": {
															"port": {
																"type": "number"
															},
															"protocol": {
																"type": "string",
																"const": "tcp"
															},
															"healthCheck": {
																"type": "object",
																"properties": {
																	"timeoutSecs": {
																		"type": "number",
																		"minimum": 2,
																		"maximum": 120
																	},
																	"intervalSecs": {
																		"type": "number",
																		"minimum": 5,
																		"maximum": 300
																	},
																	"gracePeriodSecs": {
																		"type": "number",
																		"minimum": 0,
																		"maximum": 2147483647
																	}
																},
																"additionalProperties": false
															},
															"tls": {
																"type": "boolean",
																"default": true
															}
														},
														"required": ["port", "protocol", "healthCheck"],
														"additionalProperties": false
													},
													{
														"type": "object",
														"properties": {
															"port": {
																"type": "number"
															},
															"protocol": {
																"type": "string",
																"const": "http"
															},
															"healthCheck": {
																"type": "object",
																"properties": {
																	"timeoutSecs": {
																		"type": "number",
																		"minimum": 2,
																		"maximum": 120
																	},
																	"intervalSecs": {
																		"type": "number",
																		"minimum": 5,
																		"maximum": 300
																	},
																	"gracePeriodSecs": {
																		"type": "number",
																		"minimum": 0,
																		"maximum": 2147483647
																	},
																	"path": {
																		"type": "string",
																		"default": "/"
																	}
																},
																"additionalProperties": false
															},
															"tls": {
																"type": "boolean",
																"default": true
															}
														},
														"required": ["port", "protocol", "healthCheck"],
														"additionalProperties": false
													},
													{
														"type": "object",
														"properties": {
															"port": {
																"type": "number"
															},
															"protocol": {
																"type": "string",
																"const": "http2"
															},
															"healthCheck": {
																"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/ports/items/anyOf/2/properties/healthCheck"
															},
															"tls": {
																"type": "boolean",
																"default": true
															}
														},
														"required": ["port", "protocol", "healthCheck"],
														"additionalProperties": false
													},
													{
														"type": "object",
														"properties": {
															"port": {
																"type": "number"
															},
															"protocol": {
																"type": "string",
																"const": "grpc"
															},
															"healthCheck": {
																"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/ports/items/anyOf/1/properties/healthCheck"
															},
															"tls": {
																"type": "boolean",
																"default": true
															}
														},
														"required": ["port", "protocol", "healthCheck"],
														"additionalProperties": false
													}
												]
											},
											"minItems": 1
										}
									},
									"required": ["id", "name", "cpu", "memory", "type", "ports"],
									"additionalProperties": false
								},
								{
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/id"
										},
										"name": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/name"
										},
										"dependsOn": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dependsOn"
										},
										"target": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/target"
										},
										"buildType": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/buildType"
										},
										"containerImage": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/containerImage"
										},
										"cpu": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/cpu"
										},
										"gpu": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/gpu"
										},
										"memory": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/memory"
										},
										"ci": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/ci"
										},
										"containerInsights": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/containerInsights"
										},
										"storage": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/storage"
										},
										"minInstances": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/minInstances"
										},
										"maxInstances": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/maxInstances"
										},
										"versionHistoryCount": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/versionHistoryCount"
										},
										"basePath": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/basePath"
										},
										"installCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/installCommand"
										},
										"buildCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/buildCommand"
										},
										"startCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/startCommand"
										},
										"preDeployCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/preDeployCommand"
										},
										"postDeployCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/postDeployCommand"
										},
										"postBuildCommand": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/postBuildCommand"
										},
										"privileged": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/privileged"
										},
										"dockerfilePath": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/dockerfilePath"
										},
										"dockerContext": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/dockerContext"
										},
										"injectEnvVariablesInDockerfile": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/injectEnvVariablesInDockerfile"
										},
										"dockerLabels": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/dockerLabels"
										},
										"envVariables": {
											"$ref": "#/properties/envVariables"
										},
										"watchPaths": {
											"$ref": "#/properties/environments/items/properties/source/anyOf/0/properties/filter/properties/watchPaths"
										},
										"autoscaling": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/autoscaling"
										},
										"integrations": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/integrations"
										},
										"sidecars": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/sidecars"
										},
										"includeEnvVariablesInBuild": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/includeEnvVariablesInBuild"
										},
										"logging": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/0/properties/logging"
										},
										"permissions": {
											"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/permissions"
										},
										"type": {
											"type": "string",
											"const": "private-network-server"
										},
										"ports": {
											"type": "array",
											"items": {
												"$ref": "#/properties/environments/items/properties/services/items/anyOf/9/properties/ports/items"
											},
											"minItems": 1
										}
									},
									"required": ["id", "name", "cpu", "memory", "type", "ports"],
									"additionalProperties": false
								}
							]
						}
					},
					"envVariables": {
						"$ref": "#/properties/envVariables"
					},
					"vpc": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"cidr": {
								"type": "string"
							},
							"private": {
								"type": "boolean",
								"default": false
							}
						},
						"additionalProperties": false
					},
					"id": {
						"type": "string",
						"minLength": 1,
						"maxLength": 191
					}
				},
				"required": ["name", "region", "source", "services", "id"],
				"additionalProperties": false
			}
		}
	},
	"required": ["environments"],
	"additionalProperties": false,
	"$schema": "http://json-schema.org/draft-07/schema#"
}
